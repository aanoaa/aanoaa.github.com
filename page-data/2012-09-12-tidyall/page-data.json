{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/2012-09-12-tidyall/","result":{"data":{"site":{"siteMetadata":{"title":"Mustache :{","social":[{"name":"rss","url":"https://aanoaa.github.io/rss.xml"},{"name":"GitHub","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"e80628e5-69b8-55d4-8f82-b8312d682683","excerpt":"Perl 에는 Best Practices 가 있습니다. Damian Conway (일명 '대곤이횽') 의  Perl Best Practices  가 그것입니다. (저는 아직 안읽어봤습니다) Perl::Critic 은 정적 소스코드 분석기로써  Perl…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"tidyall\",\n  \"date\": \"2012-09-12 01:11\",\n  \"comments\": true,\n  \"categories\": \"perl tidy critic\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Perl \\uC5D0\\uB294 Best Practices \\uAC00 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"http://akamaicovers.oreilly.com/images/9780596001735/cat.gif\",\n    \"alt\": \"cat\"\n  }))), mdx(\"p\", null, \"Damian Conway (\\uC77C\\uBA85 \\u2018\\uB300\\uACE4\\uC774\\uD6BD\\u2019) \\uC758 \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://shop.oreilly.com/product/9780596001735.do\"\n  }), \"Perl Best Practices\"), \" \\uAC00 \\uADF8\\uAC83\\uC785\\uB2C8\\uB2E4. (\\uC800\\uB294 \\uC544\\uC9C1 \\uC548\\uC77D\\uC5B4\\uBD24\\uC2B5\\uB2C8\\uB2E4)\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.cpan.org/~thaljef/Perl-Critic-1.118/lib/Perl/Critic.pm\"\n  }), \"Perl::Critic\"), \"\\uC740 \\uC815\\uC801 \\uC18C\\uC2A4\\uCF54\\uB4DC \\uBD84\\uC11D\\uAE30\\uB85C\\uC368 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Perl Best Practices\"), \" \\uC758 \\uC815\\uCC45\\uC744 \\uB530\\uB985\\uB2C8\\uB2E4.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.cpan.org/~shancock/Perl-Tidy-20120714/bin/perltidy\"\n  }), \"perltidy\"), \" \\uB3C4 \\uC788\\uC2B5\\uB2C8\\uB2E4.\\n\\uC791\\uC131\\uD55C perlcode \\uB97C \\uAE54\\uB054\\uD558\\uAC8C \\uC815\\uB3C8\\uD574\\uC90D\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC774\\uC640 \\uAC19\\uC740 \\uB3C4\\uAD6C\\uB97C \\uC0AC\\uC6A9\\uD558\\uBA74 \\uD611\\uC5C5\\uD300\\uC73C\\uB85C\\uC368 \\uC77C\\uAD00\\uB41C \\uCF54\\uB529\\uC2A4\\uD0C0\\uC77C\\uC744 \\uC720\\uC9C0\\uC2DC\\uCF1C \\uC904\\n\\uC218 \\uC788\\uC744 \\uAC70\\uB77C\\uACE0 \\uC0DD\\uAC01\\uD588\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uAC1C\\uC778\\uC774 \\uC2A4\\uC2A4\\uB85C \\uC54C\\uC544\\uC11C \\uC9C0\\uD0AC \\uC218 \\uC788\\uAC9F\\uACE0,\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"pre-commit\"), \" hook \\uC744 \\uD65C\\uC6A9\\uD560 \\uC218 \\uB3C4 \\uC788\\uACA0\\uC2B5\\uB2C8\\uB2E4.\")), mdx(\"p\", null, \"1\\uBC88\\uC740 \\uC798 \\uC548\\uB418\\uB354\\uB77C\\uACE0\\uC694.\\n\\uADF8\\uB798\\uC11C 2\\uBC88\\uC744 \\uC2DC\\uB3C4\\uC911\\uC785\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uBC29\\uBC95\\uC740 \\uC774\\uB807\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ cpanm Code::TidyAll\\n\")), mdx(\"p\", null, \"\\uC124\\uCE58\\uD558\\uACE0 project repo \\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"pre-commit\"), \" hook \\uC744 \\uC791\\uC131\\uD569\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-perl\",\n    \"metastring\": \".git/hooks/pre-commit\",\n    \".git/hooks/pre-commit\": true\n  }), \"#!/usr/bin/env perl\\nuse strict;\\nuse warnings;\\nuse Code::TidyAll::Git::Precommit;\\n\\nCode::TidyAll::Git::Precommit->check();\\n\")), mdx(\"p\", null, \"project root \\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tidyall.ini\"), \" \\uB97C \\uC791\\uC131\\uD569\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ini\",\n    \"metastring\": \"tidyall.ini\",\n    \"tidyall.ini\": true\n  }), \"[PerlTidy]\\nselect = **/*.{pl,pm,t}\\nignore = lib/*/Schema/Result/*.pm\\nargv = -noll -it=2\\n\\n[PerlCritic]\\nselect = lib/**/*.pm\\nargv = -severity 5\\n\")), mdx(\"p\", null, \"\\uADF8\\uB9AC\\uACE0 \\uCF54\\uB4DC\\uB97C \\uC791\\uC131\\uD558\\uACE0 commit \\uD569\\uB2C8\\uB2E4.\\n\\uCC38 \\uC27D\\uC8E0?\"), mdx(\"p\", null, \"\\uAC70\\uC9C0 \\uAC19\\uC774 \\uC791\\uC131\\uD588\\uB2E4\\uBA74 \\uCEE4\\uBC0B\\uC5D0 \\uC2E4\\uD328\\uD558\\uACE0 \\uC801\\uC808\\uD55C \\uBA54\\uC138\\uC9C0\\uAC00 \\uB098\\uD0C0\\uB0A9\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uCEE4\\uBC0B\\uC804\\uC5D0 \\uC2A4\\uC2A4\\uB85C \\uD655\\uC778\\uD574 \\uBCF4\\uB824\\uBA74 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ tidyall -a\"), \" \\uD558\\uC2DC\\uBA74 \\uB429\\uB2C8\\uB2E4.\"), mdx(\"h3\", {\n    \"id\": \"see-also\"\n  }, \"SEE ALSO\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.openswartz.com/2012/09/05/tidying-and-checking-code-on-commit/\"\n  }), \"Tidying and checking code on commit\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.openswartz.com/2012/08/21/one-tidier-to-rule-them-all/\"\n  }), \"One tidier to rule them all\"))));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/2012-09-12-tidyall/","title":"tidyall","tags":[],"keywords":[],"date":"September 12, 2012","image":null,"imageAlt":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"302245ba-b7c7-5738-9ed1-574292dafd29","excerpt":"저는  pull-request workflow 가 갑이라고 생각합니다.\n비동기 방식으로 업무가 진행되고, merge 하기전에 자연스런 review 도\n되고요. 근데 궁금한점이 생겻습니다.\n이게 말로 한문장으로 설명하기 참 어려워서 예를 들겠습니다.…","slug":"/2012-09-11-git-push-force/","title":"git push --force","date":"September 11, 2012"},"next":{"__typename":"MdxBlogPost","id":"714f6fd3-1f55-539f-b6e7-3508c1d64068","excerpt":"p5-hubot scipts explained 필요해서  hubot  을  perl  로 옮기고\n있습니다. -  p5-hubot 아직 해야할 일이 많지만 테스트 + 문서화를 해서\n CPAN  에 올릴 생각입니다. hubot-scripts…","slug":"/2012-10-04-p5-hubot/","title":"p5-hubot","date":"October 04, 2012"}},"pageContext":{"id":"e80628e5-69b8-55d4-8f82-b8312d682683","previousId":"302245ba-b7c7-5738-9ed1-574292dafd29","nextId":"714f6fd3-1f55-539f-b6e7-3508c1d64068"}},"staticQueryHashes":["386998304","63159454"]}