{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/2014-02-12-shut-the-fuck-up-and-perltidy/","result":{"data":{"site":{"siteMetadata":{"title":"Mustache :{","social":[{"name":"rss","url":"https://aanoaa.github.io/rss.xml"},{"name":"GitHub","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"__typename":"MdxBlogPost","id":"d9934a22-cff5-5910-b252-79dbf5f3b88e","excerpt":"$HOME/.perltidyrc 여기에 emacs 에다가\n perltidy-mode.el  load\n하고  하고 저장하면 저장할때마다 알아서  perltidy  되기 땜시 굳입니다\n팀에서 통일해서 쓰면 좋겟습니다. SEE ALSO tidyall","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"shut the fuck up and perltidy\",\n  \"date\": \"2014-02-12 17:07:08 +0900\",\n  \"comments\": true,\n  \"categories\": \"perltidy\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$HOME/.perltidyrc\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# https://github.com/kraih/mojo/blob/master/.perltidyrc\\n-pbp # Start with Perl Best Practices\\n-w # Show all warnings\\n-iob # Ignore old breakpoints\\n-l=79 # 79 characters per line\\n-mbl=2 # No more than 2 blank lines\\n-i=4 # Indentation is 4 columns\\n-ci=2 # Continuation indentation is 2 columns\\n-vt=0 # Less vertical tightness\\n-pt=2 # High parenthesis tightness\\n-bt=2 # High brace tightness\\n-sbt=2 # High square bracket tightness\\n-isbc # Don't indent comments without leading space\\n\")), mdx(\"p\", null, \"\\uC5EC\\uAE30\\uC5D0 emacs \\uC5D0\\uB2E4\\uAC00\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.cpan.org/~jjore/perltidy-mode/\"\n  }), \"perltidy-mode.el\"), \" load\\n\\uD558\\uACE0 \"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"(eval-after-load \\\"cperl-mode\\\"\\n  '(add-hook 'cperl-mode-hook 'perltidy-mode))\\n\")), mdx(\"p\", null, \"\\uD558\\uACE0 \\uC800\\uC7A5\\uD558\\uBA74 \\uC800\\uC7A5\\uD560\\uB54C\\uB9C8\\uB2E4 \\uC54C\\uC544\\uC11C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"perltidy\"), \" \\uB418\\uAE30 \\uB55C\\uC2DC \\uAD73\\uC785\\uB2C8\\uB2E4\\n\\uD300\\uC5D0\\uC11C \\uD1B5\\uC77C\\uD574\\uC11C \\uC4F0\\uBA74 \\uC88B\\uAC9F\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"h3\", {\n    \"id\": \"see-also\"\n  }, \"SEE ALSO\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://aanoaa.github.io/blog/2012/09/12/tidyall/\"\n  }), \"tidyall\")));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/2014-02-12-shut-the-fuck-up-and-perltidy/","title":"shut the fuck up and perltidy","tags":[],"keywords":[],"date":"February 12, 2014","image":null,"imageAlt":null,"socialImage":null},"previous":{"__typename":"MdxBlogPost","id":"4530f7cf-1c93-5fb7-9a1c-aebd025908f4","excerpt":"개인적인 private repo 는 bitbucket 을 사용하고 있었는데, 아래 링크를\n보고 Dropbox 를 사용하고 있습니다. Forget github limits: Free private git repositories with Dropbox…","slug":"/2013-12-23-private-git-repo-with-dropbox/","title":"Private Git Repo With Dropbox","date":"December 23, 2013"},"next":{"__typename":"MdxBlogPost","id":"87e1e470-3eef-594b-b5d1-f81df2b0e423","excerpt":"Dist::Zilla \n는 매우 편리한 배포도구 입니다. 기능이 넘 많아서 잘 모르고 써왔는데, 이게 뭔지도 모르는걸 쓰다보니\n헛갈려서 요새는 레알 간단하게만 쓰고 있습니다. 갠적으로 딱 필요한 메타파일은 이거 3개 입니다. dist.ini…","slug":"/2014-02-12-keep-simple-dist-dot-ini/","title":"keep simple dist.ini","date":"February 12, 2014"}},"pageContext":{"id":"d9934a22-cff5-5910-b252-79dbf5f3b88e","previousId":"4530f7cf-1c93-5fb7-9a1c-aebd025908f4","nextId":"87e1e470-3eef-594b-b5d1-f81df2b0e423"}},"staticQueryHashes":["386998304","63159454"]}