{"componentChunkName":"component---node-modules-gatsby-theme-blog-core-src-templates-post-query-js","path":"/2012-10-04-p5-hubot/","result":{"data":{"site":{"siteMetadata":{"title":"Mustache :{","social":[{"name":"github","url":"https://github.com/aanoaa"},{"name":"GitHub","url":"https://github.com/gatsbyjs"}]}},"blogPost":{"id":"714f6fd3-1f55-539f-b6e7-3508c1d64068","excerpt":"p5-hubot scipts explained 필요해서  hubot  을  perl  로 옮기고\n있습니다. -  p5-hubot 아직 해야할 일이 많지만 테스트 + 문서화를 해서\n CPAN  에 올릴 생각입니다. hubot-scripts…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"p5-hubot\",\n  \"date\": \"2012-10-04 15:30\",\n  \"comments\": true,\n  \"categories\": [\"hubot\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", {\n    \"id\": \"p5-hubot-scipts-explained\"\n  }, \"p5-hubot scipts explained\"), mdx(\"p\", null, \"\\uD544\\uC694\\uD574\\uC11C \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/github/hubot\"\n  }), \"hubot\"), \" \\uC744 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"perl\"), \" \\uB85C \\uC62E\\uAE30\\uACE0\\n\\uC788\\uC2B5\\uB2C8\\uB2E4. - \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/aanoaa/p5-hubot\"\n  }), \"p5-hubot\")), mdx(\"p\", null, \"\\uC544\\uC9C1 \\uD574\\uC57C\\uD560 \\uC77C\\uC774 \\uB9CE\\uC9C0\\uB9CC \\uD14C\\uC2A4\\uD2B8 + \\uBB38\\uC11C\\uD654\\uB97C \\uD574\\uC11C\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.cpan.org/\"\n  }), \"CPAN\"), \" \\uC5D0 \\uC62C\\uB9B4 \\uC0DD\\uAC01\\uC785\\uB2C8\\uB2E4.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/github/hubot-scripts/graphs/contributors\"\n  }), \"hubot-scripts contributors\"), \"\\n\\uB294 100\\uBA85\\uC774 \\uB118\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"p5-hubot\"), \" \\uB3C4 \\uB3C4\\uC6C0\\uC744 \\uBC1B\\uC544\\uC11C \\uBA4B\\uC9C4 \\uAE30\\uB2A5\\uC744 \\uC7A5\\uCC29\\uD558\\uACE0 \\uC2F6\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://search.cpan.org/\"\n  }), \"CPAN\"), \" \\uC5D0 \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Hubot::Scripts::*\"), \" \\uBAA8\\uB4C8\\uC774\\n\\uB9CE\\uC544\\uC9C0\\uBA74 \\uC88B\\uACA0\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"robot \\uC5D0\\uAC8C \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"http://twitter.com/<username>/status/<tweetid>\"), \" \\uC758 \\uD328\\uD134\\uC774\\n\\uB4E4\\uB9AC\\uBA74 \\uADF8 \\uB0B4\\uC6A9\\uC744 \\uD30C\\uC2F1\\uD574\\uC11C \\uB9D0\\uD558\\uB294 \\uC2A4\\uD06C\\uB9BD\\uD2B8 \\uC785\\uB2C8\\uB2E4.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-perl\",\n    \"metastring\": \"Hubot::Scripts::tweet\",\n    \"Hubot::Scripts::tweet\": true\n  }), \"package Hubot::Scripts::tweet;\\nuse strict;\\nuse warnings;\\nuse JSON::XS;\\n\\nsub load {\\n    my ( $class, $robot ) = @_;\\n    $robot->hear(\\n        qr/https?:\\\\/\\\\/(mobile\\\\.)?twitter\\\\.com\\\\/.*?\\\\/status\\\\/([0-9]+)/i,\\n        sub {\\n            my $msg = shift;    # Hubot::Response\\n            $msg->http( 'https://api.twitter.com/1/statuses/show/'\\n                  . $msg->match->[1]\\n                  . '.json' )->get(\\n                sub {\\n                    my ( $body, $hdr ) = @_;\\n                    return if ( !$body || !$hdr->{Status} =~ /^2/ );\\n                    my $tweet = decode_json($body);\\n                    $msg->send(\\\"$tweet->{user}{screen_name}: $tweet->{text}\\\");\\n                }\\n                  );\\n            $msg->message->finish;\\n        }\\n    );\\n}\\n\\n1;\\n\\n=head1 SYNOPSIS\\n\\nhttp://twitter.com/<username>/status/<tweetid>\\n\\n=head1 DEPENDENCIES\\n\\nNone\\n\\n=head1 CONFIGURATION\\n\\nNone\\n\\n=head1 AUTHOR\\n\\nHyungsuk Hong\\n\\n=cut\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-coffee-script\",\n    \"metastring\": \"tweet.coffee\",\n    \"tweet.coffee\": true\n  }), \"# Description:\\n#   Detect tweet URL and send tweet content\\n#\\n# Dependencies:\\n#   None\\n#\\n# Configuration:\\n#   None\\n#\\n# Commands:\\n#\\n# Author:\\n#   Vrtak-CZ\\n\\nmodule.exports = (robot) ->\\n    robot.hear /https?:\\\\/\\\\/(mobile\\\\.)?twitter\\\\.com\\\\/.*?\\\\/status\\\\/([0-9]+)/i, (msg) ->\\n        msg.http(\\\"https://api.twitter.com/1/statuses/show/#{msg.match[2]}.json\\\").get() (err, res, body) ->\\n            return if err or (res.statusCode != 200)\\n\\n            tweet = JSON.parse(body)\\n\\n            msg.send \\\"@#{tweet.user.screen_name}: #{tweet.text}\\\"\\n        msg.message.finish()\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"robot.hear /foo/\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"foo\"), \" \\uAC00 \\uB4E4\\uB9AC\\uBA74 \\uBC18\\uC751\\uD569\\uB2C8\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"robot.respond /foo/\"), \": \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hubot: foo\"), \" \\uC5D0 \\uBC18\\uC751\\uD569\\uB2C8\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"robot.send 'hi'\"), \": \\uB85C\\uBD07\\uC774 \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"hi\"), \" \\uB77C\\uACE0 \\uD569\\uB2C8\\uB2E4.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"robot.reply 'hi'\"), \": \\uB85C\\uBD07\\uC774 \\uB9D0\\uAC74\\uC0AC\\uB78C\\uD55C\\uD14C \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"<user>: hi\"), \" \\uB77C\\uACE0 \\uD569\\uB2C8\\uB2E4.\")), mdx(\"p\", null, \"\\uC694\\uAC70 4\\uAC1C\\uC758 \\uAE30\\uB2A5\\uB9CC \\uC54C\\uBA74 \\uC2A4\\uD06C\\uB9BD\\uD2B8\\uB97C \\uC791\\uC131\\uD558\\uAE34 \\uC27D\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC800\\uD76C\\uD68C\\uC0AC\\uC5D0\\uC11C\\uB294 \\uC774\\uAC78 \\uC774\\uC6A9\\uD574\\uC11C\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/miyagawa/hubot-standup\"\n  }), \"standup-meeting\"), \" \\uB3C4 \\uD558\\uACE0\\n\\uADF8\\uB7FD\\uB2C8\\uB2E4.\"), mdx(\"p\", null, \"\\uC6B0\\uC120 \\uC544\\uC774\\uB514\\uC5B4\\uAC00 \\uC788\\uC73C\\uBA74 \\uB0A8\\uACA8\\uC8FC\\uC138\\uC694.\"), mdx(\"p\", null, \"\\uD14C\\uC2A4\\uD2B8\\uD658\\uACBD\\uAD6C\\uCD95\\uC774\\uB791 \\uC758\\uC874\\uC131\\uBB38\\uC81C\\uB294 \\uD574\\uACB0\\uD574\\uC11C \\uB2E4\\uC2DC \\uD3EC\\uC2A4\\uD305\\uD558\\uACA0\\uC2B5\\uB2C8\\uB2E4.\"), mdx(\"h3\", {\n    \"id\": \"see-also\"\n  }, \"SEE ALSO\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://silexkr.github.com/blog/2012/02/21/irc-bot/\"\n  }), \"irc-bot\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://theprogrammingbutler.com/blog/archives/2011/10/28/hubot-scripts-explained/\"\n  }), \"hubot Scripts Explained\"))));\n}\n;\nMDXContent.isMDXComponent = true;","slug":"/2012-10-04-p5-hubot/","title":"p5-hubot","tags":[],"keywords":[],"date":"October 04, 2012"},"previous":{"id":"e80628e5-69b8-55d4-8f82-b8312d682683","excerpt":"Perl 에는 Best Practices 가 있습니다. {% img  http://akamaicovers.oreilly.com/images/9780596001735/cat.gif  %} Damian Conway (일명 '대곤이횽') 의  Perl…","slug":"/2012-09-12-tidyall/","title":"tidyall","date":"September 12, 2012"},"next":{"id":"2a57b63a-4081-5861-8326-d0fecd518938","excerpt":"오리지날  hubot  에는\n heroku  어쩌고 저쩌고 하는 기능이 있습니다. 이제  p5-hubot  에서도 됩니다. OVERVIEW 가장 기본은 이렇습니다만, 확장 스크립트를 추가하시려면\n hubot-scripts.json…","slug":"/2013-06-10-p5-hubot-onto-heroku/","title":"p5-hubot onto heroku","date":"June 10, 2013"}},"pageContext":{"isCreatedByStatefulCreatePages":false,"id":"714f6fd3-1f55-539f-b6e7-3508c1d64068","previousId":"e80628e5-69b8-55d4-8f82-b8312d682683","nextId":"2a57b63a-4081-5861-8326-d0fecd518938"}}}