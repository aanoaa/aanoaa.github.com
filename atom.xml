<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mustache :{]]></title>
  <link href="http://aanoaa.github.io/atom.xml" rel="self"/>
  <link href="http://aanoaa.github.io/"/>
  <updated>2013-12-23T18:30:40+09:00</updated>
  <id>http://aanoaa.github.io/</id>
  <author>
    <name><![CDATA[Hyungsuk Hong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Private Git Repo With Dropbox]]></title>
    <link href="http://aanoaa.github.io/blog/2013/12/23/private-git-repo-with-dropbox/"/>
    <updated>2013-12-23T18:18:35+09:00</updated>
    <id>http://aanoaa.github.io/blog/2013/12/23/private-git-repo-with-dropbox</id>
    <content type="html"><![CDATA[<p>개인적인 private repo 는 bitbucket 을 사용하고 있었는데, 아래 링크를
보고 Dropbox 를 사용하고 있습니다.</p>

<p><a href="http://mrdanadams.com/2011/github-free-private-git-repositories-dropbox/">Forget github limits: Free private git repositories with Dropbox</a></p>

<p>근데 아쉬운거는 github repo 에는 issue board 도 있어서 프로젝트별로
할일을 관리할 수 있어서 참 좋은데 그런 기능이 필요했습니다.</p>

<p>해서 둘러보던 차에 <a href="http://todotxt.com/">Todo.txt</a> CLI 를 사용해보고
있습니다.</p>

<pre><code># todo.cfg
export TODO_DIR=$HOME/Dropbox/todo/`basename $PWD`
alias t=todo.sh
</code></pre>

<p>요래해서 사용중입니다.</p>

<p>프로젝트 root 에서 밖에 사용못하고 이름 중복에 대응할 순 없지만 아주
만족합니다.</p>

<p><code>Dropbox</code>++, <code>Todo.txt</code>++</p>

<pre><code>$ cd ~/Desktop/t
$ t add '요래 조래'
1 요래 조래
TODO: 1 added.
~/Desktop/t $ t add '이러쿵 저러쿵'
2 이러쿵 저러쿵
TODO: 2 added.
~/Desktop/t $ t add '어쩌고 저쩌고'
3 어쩌고 저쩌고
TODO: 3 added.
~/Desktop/t $ t ls
3 어쩌고 저쩌고
1 요래 조래
2 이러쿵 저러쿵
--
TODO: 3 of 3 tasks shown
~/Desktop/t $ t do 3
3 x 2013-12-23 어쩌고 저쩌고
TODO: 3 marked as done.
x 2013-12-23 어쩌고 저쩌고
TODO: /home/hshong/Dropbox/todo/t/todo.txt archived.
~/Desktop/t $ t ls
1 요래 조래
2 이러쿵 저러쿵
--
TODO: 2 of 2 tasks shown
</code></pre>

<p>뭐 대략 이런느낌</p>

<p>Dropbox 에서 동기화 되기 땜시 다른 PC 로 옮겨서도 같은 프로젝트에서
같은 TODO list 를 관리할 수 있다는게 좋은 것 같습니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffeescript-compile-args]]></title>
    <link href="http://aanoaa.github.io/blog/2013/12/20/coffeescript-compile-args/"/>
    <updated>2013-12-20T00:34:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2013/12/20/coffeescript-compile-args</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ coffee -h
</span><span class='line'>
</span><span class='line'>Usage: coffee [options] path/to/script.coffee -- [args]
</span><span class='line'>
</span><span class='line'>If called without options, `coffee` will run your script.
</span><span class='line'>
</span><span class='line'>  -b, --bare         compile without a top-level function wrapper
</span><span class='line'>  -c, --compile      compile to JavaScript and save as .js files
</span><span class='line'>  -e, --eval         pass a string from the command line as input
</span><span class='line'>  -h, --help         display this help message
</span><span class='line'>  -i, --interactive  run an interactive CoffeeScript REPL
</span><span class='line'>  -j, --join         concatenate the source CoffeeScript before compiling
</span><span class='line'>  -m, --map          generate source map and save as .map files
</span><span class='line'>  -n, --nodes        print out the parse tree that the parser produces
</span><span class='line'>      --nodejs       pass options directly to the "node" binary
</span><span class='line'>  -o, --output       set the output directory for compiled JavaScript
</span><span class='line'>  -p, --print        print out the compiled JavaScript
</span><span class='line'>  -s, --stdio        listen for and compile scripts over stdio
</span><span class='line'>  -l, --literate     treat stdio as literate style coffee-script
</span><span class='line'>  -t, --tokens       print out the tokens that the lexer/rewriter produce
</span><span class='line'>  -v, --version      display the version number
</span><span class='line'>  -w, --watch        watch scripts for changes and rerun commands</span></code></pre></td></tr></table></div></figure>


<p>javascript 는 html 의 script 로써만 사용하고 있습니다.
직접 사용하진 않고 <a href="http://coffeescript.org/">CoffeeScript</a> 를 쓰고
있습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">$</span> <span class="nx">coffee</span> <span class="o">-</span><span class="nx">cps</span>
</span><span class='line'><span class="nx">$</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&#39;oops&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">Ctrl</span><span class="o">+</span><span class="nx">d</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">//</span> <span class="nx">Generated</span> <span class="k">by</span> <span class="nx">CoffeeScript</span> <span class="mf">1.6</span><span class="p">.</span><span class="mi">3</span>
</span><span class='line'><span class="p">(</span><span class="nx">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="nx">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s">&#39;oops&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="p">}).</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>위 결과처럼 별 옵션없이 <code>--compile</code> 하면</p>

<pre><code>(function() { ... }).call(this)
</code></pre>

<p>무명함수로 감싼뒤에 실행합니다. lexical scope 이 자동으로 적용되어서
훌륭합니다만, 여러개의 파일을 하나의 html 에서 사용하고자 할때는 다른
파일에서 선언한 함수에 접근을 못하는 상황이 발생할 수 있습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;jquery.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;a.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;b.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>a.js</code> 에 <code>foo</code> 라는 함수를 만들어 놓고 <code>b.js</code> 에서 사용하고자 하면
못찾습니다.</p>

<pre><code>ReferenceError: foo is not defined
</code></pre>

<p>이를 해결하는 방법은 3가지가 있습니다. (더 있을 수도..)</p>

<ol>
<li><p>requirejs 같은거 쓴다.</p>

<p><code>define</code>, <code>require</code> 으로 스슥</p></li>
<li><p>Window 이름공간을 더럽힌다.</p>

<p>브라우저의 전역적 이름공간인 <code>Window</code> 의 프로토타입에 함수를
추가해서 사용</p></li>
<li><p>무명함수를 벗긴다.</p>

<p><code>coffee</code> 명령어의 <code>--bare</code> 옵션인데, <code>compile without a top-level
function wrapper</code></p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">$</span> <span class="nx">coffee</span> <span class="o">-</span><span class="nx">bcps</span>
</span><span class='line'><span class="nx">$</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&#39;oops&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">Ctrl</span><span class="o">+</span><span class="nx">d</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">//</span> <span class="nx">Generated</span> <span class="k">by</span> <span class="nx">CoffeeScript</span> <span class="mf">1.6</span><span class="p">.</span><span class="mi">3</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nx">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s">&#39;oops&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>  요래 하는 것입니다.</p>

<hr />

<p>emacs 사용자라면 어찌 매번 컴파일하는 번거로운 작업을 한단 말입니까.
<code>coffee-cos-mode</code>(coffee compile-on-save mode) 에 컴파일 옵션을
수정해둬야 하겠습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="p">(</span><span class="nx">defun</span> <span class="nx">coffee</span><span class="o">-</span><span class="nx">custom</span> <span class="p">()</span>
</span><span class='line'>  <span class="s">&quot;coffee-mode-hook&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nx">set</span> <span class="p">(</span><span class="nx">make</span><span class="o">-</span><span class="nx">local</span><span class="o">-</span><span class="nx">variable</span> <span class="s">&#39;tab-width) 2)</span>
</span><span class='line'><span class="s">  (setq coffee-args-compile &#39;</span><span class="p">(</span><span class="s">&quot;-bc&quot;</span><span class="p">))</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[P5-hubot Onto Heroku]]></title>
    <link href="http://aanoaa.github.io/blog/2013/06/10/p5-hubot-onto-heroku/"/>
    <updated>2013-06-10T17:31:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2013/06/10/p5-hubot-onto-heroku</id>
    <content type="html"><![CDATA[<p>오리지날 <a href="https://github.com/github/hubot">hubot</a> 에는
<a href="https://www.heroku.com/">heroku</a> 어쩌고 저쩌고 하는 기능이 있습니다.</p>

<p>이제 <a href="https://github.com/aanoaa/p5-hubot">p5-hubot</a> 에서도 됩니다.</p>

<h3>OVERVIEW</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cpanm Hubot                      <span class="c"># requires Hubot &gt;= 0.2.0</span>
</span><span class='line'><span class="nv">$ </span>hubot --create /path/to/hubot    <span class="c"># 배치가능한 형태의 패키지 저장소를 생성합니다</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/hubot
</span><span class='line'><span class="nv">$ </span>git init ; git add . ; git commit -m <span class="s2">&quot;init commit&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>heroku create --stack cedar --buildpack https://github.com/aanoaa/heroku-buildpack-perl.git
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>heroku config:add <span class="nv">HEROKU_URL</span><span class="o">=</span>http://your-herokuapp.herokuapp.com
</span><span class='line'><span class="nv">$ </span>heroku config:add <span class="nv">HUBOT_IRC_ROOMS</span><span class="o">=</span><span class="s1">&#39;#channel&#39;</span>
</span><span class='line'><span class="nv">$ </span>heroku config:add <span class="nv">HUBOT_IRC_SERVER</span><span class="o">=</span><span class="s1">&#39;irc.freenode.net&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>git push heroku master
</span></code></pre></td></tr></table></div></figure>


<p>가장 기본은 이렇습니다만, 확장 스크립트를 추가하시려면
<code>hubot-scripts.json</code> 파일에 적어주시고 그에 따른 모듈 의존성은
<code>cpanfile</code> 에 적어서 해결해야 합니다.</p>

<h3>CREATE A DEPLOYABLE HUBOT</h3>

<p><a href="http://search.cpan.org/">CPAN</a> 을 이용한다면,</p>

<pre><code>$ cpanm Hubot
$ hubot -c ~/Desktop/hubot
</code></pre>

<p>명령어로 deploy 저장소를 만들 수 있습니다.</p>

<pre><code>$ cd ~/Desktop/hubot/
~/Desktop/hubot $ find
.
./.gitignore
./cpanfile
./hubot-scripts.json
./bin
./bin/hubot
./README.md
./lib
./lib/Hubot
./lib/Hubot/EventEmitter.pm
./lib/Hubot/Scripts
./lib/Hubot/Scripts/help.pm
./lib/Hubot/Scripts/ascii.pm
./lib/Hubot/Scripts/shorten.pm
./lib/Hubot/Scripts/tweet.pm
./lib/Hubot/Scripts/roles.pm
./lib/Hubot/Response.pm
./lib/Hubot/Robot.pm
./lib/Hubot/User.pm
./lib/Hubot/Adapter.pm
./lib/Hubot/TextListener.pm
./lib/Hubot/Listener.pm
./lib/Hubot/Adapter
./lib/Hubot/Adapter/Irc.pm
./lib/Hubot/Adapter/Shell.pm
./lib/Hubot/Adapter/Campfire.pm
./lib/Hubot/Message.pm
./lib/Hubot/Brain.pm
./lib/Hubot/Creator.pm
./lib/Hubot.pm
./Procfile
</code></pre>

<p>이 디렉토리를 git 저장소로 만들고요, <code>heroku</code> tool 을 사용해서 heroku
에서 돌아갈 서비스 저장소로 만듭니다.</p>

<p><code>Procfile</code> 은 heroku 에서 사용하는 process 타입별로 실행 명령어를
담고 있는 어쩌고 저쩌고;;
<a href="https://devcenter.heroku.com/articles/procfile">Process Types and the Procfile</a></p>

<p><code>cpanfile</code> 은 모듈의존성을 해결하기 위해 꼭 필요합니다. 그렇지 않으면
아래와 비슷한 오류가 발생되면서 프로그램이 실행되지 않습니다.</p>

<pre><code>Can't locate xxx.pm in @INC (@INC contains: ~~~) at line 1.
</code></pre>

<p>나머지는 p5-hubot core 모듈입니다.(서비스엔 필요없는것도 잇지만..)</p>

<h3>CREATE A HEROKU INSTANCE?</h3>

<pre><code>$ heroku create --stack cedar --buildpack https://github.com/aanoaa/heroku-buildpack-perl.git
</code></pre>

<p><code>heroku</code> 라는 <code>remote</code> 를 등록하고 <code>BUILDPACK_URL</code> 설정변수를 추가하는
것 정도가 아닐까 추측 합니다.</p>

<p>BUILDPACK_URL 은 git 저장소인데,</p>

<ul>
<li><code>bin/detect</code></li>
<li><code>bin/compile</code></li>
<li><code>bin/release</code></li>
</ul>


<p>를 가지고 있습니다. 자세한 내용은
<a href="https://devcenter.heroku.com/articles/buildpacks#creating-a-buildpack">Creating a Buildpack</a>
을 참고하시고, 이부분의 매직은 <code>bin/compile</code> 이 수행될때 <code>cpanm</code> 을
이용해서 <code>./local</code> 에 의존모듈을 설치합니다. 그리고 실행할때에
<code>-Ilocal/perl5/lib</code> <code>PERL5LIB</code> 에 추가합니다. 풀어쓰면 아래와
같습니다.</p>

<pre><code>$ cpanm --quiet --notest -l $BUILD_DIR/local --installdeps .
</code></pre>

<p><a href="https://twitter.com/miyagawa">@miyagawa</a>++ 입니다.</p>

<p>그리고 heroku 에 push 하면 알아서 돌아갑니다(별일 없으면..)</p>

<h3>SEE ALSO</h3>

<ul>
<li><a href="https://github.com/github/hubot/wiki/Deploying-Hubot-onto-Heroku">Deploying Hubot onto Heroku</a></li>
<li><a href="https://github.com/aanoaa/heroku-buildpack-perl">heroku-buildpack-perl for Perl/hubot</a></li>
<li><a href="https://devcenter.heroku.com/articles/procfile">Process Types and the Procfile</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[P5-hubot]]></title>
    <link href="http://aanoaa.github.io/blog/2012/10/04/p5-hubot/"/>
    <updated>2012-10-04T15:30:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/10/04/p5-hubot</id>
    <content type="html"><![CDATA[<h3>p5-hubot scipts explained</h3>

<p>필요해서 <a href="https://github.com/github/hubot">hubot</a> 을 <code>perl</code> 로 옮기고
있습니다. - <a href="https://github.com/aanoaa/p5-hubot">p5-hubot</a></p>

<p>아직 해야할 일이 많지만 테스트 + 문서화를 해서
<a href="http://search.cpan.org/">CPAN</a> 에 올릴 생각입니다.</p>

<p><a href="https://github.com/github/hubot-scripts/graphs/contributors">hubot-scripts contributors</a>
는 100명이 넘습니다.</p>

<p><code>p5-hubot</code> 도 도움을 받아서 멋진 기능을 장착하고 싶습니다.</p>

<p><a href="http://search.cpan.org/">CPAN</a> 에 <code>Hubot::Scripts::*</code> 모듈이
많아지면 좋겠습니다.</p>

<p>robot 에게 <code>http://twitter.com/&lt;username&gt;/status/&lt;tweetid&gt;</code> 의 패턴이
들리면 그 내용을 파싱해서 말하는 스크립트 입니다.</p>

<figure class='code'><figcaption><span>Hubot::Scripts::tweet</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="nn">Hubot::Scripts::</span><span class="n">tweet</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">JSON::</span><span class="n">XS</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">load</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span> <span class="nv">$class</span><span class="p">,</span> <span class="nv">$robot</span> <span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$robot</span><span class="o">-&gt;</span><span class="n">hear</span><span class="p">(</span>
</span><span class='line'>        <span class="sx">qr/https?:\/</span><span class="o">\</span><span class="sr">/(mobile\.)?twitter\.com\/.*?\/status\/([0-9]+)/i</span><span class="p">,</span>
</span><span class='line'>        <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>            <span class="k">my</span> <span class="nv">$msg</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>    <span class="c1"># Hubot::Response</span>
</span><span class='line'>            <span class="nv">$msg</span><span class="o">-&gt;</span><span class="n">http</span><span class="p">(</span> <span class="s">&#39;https://api.twitter.com/1/statuses/show/&#39;</span>
</span><span class='line'>                  <span class="o">.</span> <span class="nv">$msg</span><span class="o">-&gt;</span><span class="n">match</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>                  <span class="o">.</span> <span class="s">&#39;.json&#39;</span> <span class="p">)</span><span class="o">-&gt;</span><span class="n">get</span><span class="p">(</span>
</span><span class='line'>                <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>                    <span class="k">my</span> <span class="p">(</span> <span class="nv">$body</span><span class="p">,</span> <span class="nv">$hdr</span> <span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">return</span> <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="nv">$body</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$hdr</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">Status</span><span class="p">}</span> <span class="o">=~</span><span class="sr"> /^2/</span> <span class="p">);</span>
</span><span class='line'>                    <span class="k">my</span> <span class="nv">$tweet</span> <span class="o">=</span> <span class="n">decode_json</span><span class="p">(</span><span class="nv">$body</span><span class="p">);</span>
</span><span class='line'>                    <span class="nv">$msg</span><span class="o">-&gt;</span><span class="nb">send</span><span class="p">(</span><span class="s">&quot;$tweet-&gt;{user}{screen_name}: $tweet-&gt;{text}&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                  <span class="p">);</span>
</span><span class='line'>            <span class="nv">$msg</span><span class="o">-&gt;</span><span class="n">message</span><span class="o">-&gt;</span><span class="n">finish</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">=head1 SYNOPSIS</span>
</span><span class='line'>
</span><span class='line'><span class="cm">http://twitter.com/&lt;username&gt;/status/&lt;tweetid&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">=head1 DEPENDENCIES</span>
</span><span class='line'>
</span><span class='line'><span class="cm">None</span>
</span><span class='line'>
</span><span class='line'><span class="cm">=head1 CONFIGURATION</span>
</span><span class='line'>
</span><span class='line'><span class="cm">None</span>
</span><span class='line'>
</span><span class='line'><span class="cm">=head1 AUTHOR</span>
</span><span class='line'>
</span><span class='line'><span class="cm">Hyungsuk Hong</span>
</span><span class='line'>
</span><span class='line'><span class="cm">=cut</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>tweet.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='coffee-script'><span class='line'><span class="c1"># Description:</span>
</span><span class='line'><span class="c1">#   Detect tweet URL and send tweet content</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Dependencies:</span>
</span><span class='line'><span class="c1">#   None</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Configuration:</span>
</span><span class='line'><span class="c1">#   None</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Commands:</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Author:</span>
</span><span class='line'><span class="c1">#   Vrtak-CZ</span>
</span><span class='line'>
</span><span class='line'><span class="nv">module.exports = </span><span class="nf">(robot) -&gt;</span>
</span><span class='line'>  <span class="nx">robot</span><span class="p">.</span><span class="nx">hear</span> <span class="sr">/https?:\/\/(mobile\.)?twitter\.com\/.*?\/status\/([0-9]+)/i</span><span class="p">,</span> <span class="nf">(msg) -&gt;</span>
</span><span class='line'>      <span class="nx">msg</span><span class="p">.</span><span class="nx">http</span><span class="p">(</span><span class="s">&quot;https://api.twitter.com/1/statuses/show/</span><span class="si">#{</span><span class="nx">msg</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="s">.json&quot;</span><span class="p">).</span><span class="nx">get</span><span class="p">()</span> <span class="nf">(err, res, body) -&gt;</span>
</span><span class='line'>          <span class="k">return</span> <span class="k">if</span> <span class="nx">err</span> <span class="o">or</span> <span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">statusCode</span> <span class="o">!=</span> <span class="mi">200</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>          <span class="nv">tweet = </span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">body</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>          <span class="nx">msg</span><span class="p">.</span><span class="nx">send</span> <span class="s">&quot;@</span><span class="si">#{</span><span class="nx">tweet</span><span class="p">.</span><span class="nx">user</span><span class="p">.</span><span class="nx">screen_name</span><span class="si">}</span><span class="s">: </span><span class="si">#{</span><span class="nx">tweet</span><span class="p">.</span><span class="nx">text</span><span class="si">}</span><span class="s">&quot;</span>
</span><span class='line'>        <span class="nx">msg</span><span class="p">.</span><span class="nx">message</span><span class="p">.</span><span class="nx">finish</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>robot.hear /foo/</code>: <code>foo</code> 가 들리면 반응합니다.</li>
<li><code>robot.respond /foo/</code>: <code>hubot: foo</code> 에 반응합니다.</li>
<li><code>robot.send 'hi'</code>: 로봇이 <code>hi</code> 라고 합니다.</li>
<li><code>robot.reply 'hi'</code>: 로봇이 말건사람한테 <code>&lt;user&gt;: hi</code> 라고 합니다.</li>
</ul>


<p>요거 4개의 기능만 알면 스크립트를 작성하긴 쉽습니다.</p>

<p>저희회사에서는 이걸 이용해서
<a href="https://github.com/miyagawa/hubot-standup">standup-meeting</a> 도 하고
그럽니다.</p>

<p>우선 아이디어가 있으면 남겨주세요.</p>

<p>테스트환경구축이랑 의존성문제는 해결해서 다시 포스팅하겠습니다.</p>

<h3>SEE ALSO</h3>

<ul>
<li><a href="http://silexkr.github.com/blog/2012/02/21/irc-bot/">irc-bot</a></li>
<li><a href="http://theprogrammingbutler.com/blog/archives/2011/10/28/hubot-scripts-explained/">hubot Scripts Explained</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tidyall]]></title>
    <link href="http://aanoaa.github.io/blog/2012/09/12/tidyall/"/>
    <updated>2012-09-12T01:11:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/09/12/tidyall</id>
    <content type="html"><![CDATA[<p>Perl 에는 Best Practices 가 있습니다.</p>

<p><img src="http://akamaicovers.oreilly.com/images/9780596001735/cat.gif"></p>

<p>Damian Conway (일명 &#8216;대곤이횽&#8217;) 의 <a href="http://shop.oreilly.com/product/9780596001735.do">Perl Best Practices</a> 가 그것입니다. (저는 아직 안읽어봤습니다)</p>

<p><a href="http://search.cpan.org/~thaljef/Perl-Critic-1.118/lib/Perl/Critic.pm">Perl::Critic</a>은 정적 소스코드 분석기로써 <code>Perl Best Practices</code> 의 정책을 따릅니다.</p>

<p><a href="http://search.cpan.org/~shancock/Perl-Tidy-20120714/bin/perltidy">perltidy</a> 도 있습니다.
작성한 perlcode 를 깔끔하게 정돈해줍니다.</p>

<p>이와 같은 도구를 사용하면 협업팀으로써 일관된 코딩스타일을 유지시켜 줄
수 있을 거라고 생각했습니다.</p>

<ul>
<li>개인이 스스로 알아서 지킬 수 있겟고,</li>
<li>git <code>pre-commit</code> hook 을 활용할 수 도 있겠습니다.</li>
</ul>


<p>1번은 잘 안되더라고요.
그래서 2번을 시도중입니다.</p>

<p>방법은 이렇습니다.</p>

<pre><code>$ cpanm Code::TidyAll
</code></pre>

<p>설치하고 project repo 에 <code>pre-commit</code> hook 을 작성합니다.</p>

<figure class='code'><figcaption><span>.git/hooks/pre-commit</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/env perl</span>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Code::TidyAll::Git::</span><span class="n">Precommit</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nn">Code::TidyAll::Git::</span><span class="n">Precommit</span><span class="o">-&gt;</span><span class="n">check</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>project root 에 <code>tidyall.ini</code> 를 작성합니다.</p>

<figure class='code'><figcaption><span>tidyall.ini</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[PerlTidy]</span>
</span><span class='line'><span class="na">select</span> <span class="o">=</span> <span class="s">**/*.{pl,pm,t}</span>
</span><span class='line'><span class="na">ignore</span> <span class="o">=</span> <span class="s">lib/*/Schema/Result/*.pm</span>
</span><span class='line'><span class="na">argv</span> <span class="o">=</span> <span class="s">-noll -it=2</span>
</span><span class='line'>
</span><span class='line'><span class="k">[PerlCritic]</span>
</span><span class='line'><span class="na">select</span> <span class="o">=</span> <span class="s">lib/**/*.pm</span>
</span><span class='line'><span class="na">argv</span> <span class="o">=</span> <span class="s">-severity 5</span>
</span></code></pre></td></tr></table></div></figure>


<p>그리고 코드를 작성하고 commit 합니다.
참 쉽죠?</p>

<p>거지 같이 작성했다면 커밋에 실패하고 적절한 메세지가 나타납니다.</p>

<p>커밋전에 스스로 확인해 보려면 <code>$ tidyall -a</code> 하시면 됩니다.</p>

<h3>SEE ALSO</h3>

<ul>
<li><a href="http://www.openswartz.com/2012/09/05/tidying-and-checking-code-on-commit/">Tidying and checking code on commit</a></li>
<li><a href="http://www.openswartz.com/2012/08/21/one-tidier-to-rule-them-all/">One tidier to rule them all</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Push --force]]></title>
    <link href="http://aanoaa.github.io/blog/2012/09/11/git-push-force/"/>
    <updated>2012-09-11T23:28:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/09/11/git-push-force</id>
    <content type="html"><![CDATA[<p>저는 <code>pull-request workflow</code>가 갑이라고 생각합니다.
비동기 방식으로 업무가 진행되고, merge 하기전에 자연스런 review 도
되고요.</p>

<p>근데 궁금한점이 생겻습니다.
이게 말로 한문장으로 설명하기 참 어려워서 예를 들겠습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># alias.br=branch</span>
</span><span class='line'><span class="c"># alias.co=checkout</span>
</span><span class='line'><span class="nv">$ </span>git br
</span><span class='line'>* master
</span><span class='line'>  topic1
</span><span class='line'>  topic2
</span></code></pre></td></tr></table></div></figure>


<p>3개의 브랜치가 있고 이렇게 저렇게 작업해서 각각의 이력은 아래와
같습니다. <code>topic1</code> 과 <code>topic2</code> 가 분기한 시점은 같습니다.</p>

<ul>
<li><code>master</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bfb49285 * <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> init commit
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>topic1</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>c94f01bb * <span class="o">[</span>origin/topic1<span class="o">]</span> <span class="o">[</span>topic1<span class="o">]</span> add b.c
</span><span class='line'>90d550b0 * add a.c
</span><span class='line'>bfb49285 * <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> init commit
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>topic2</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>b9f6b81a * <span class="o">[</span>origin/topic2<span class="o">]</span> <span class="o">[</span>topic2<span class="o">]</span> add e.c
</span><span class='line'>95ea73d0 * add d.c
</span><span class='line'>2a44208b * add c.c
</span><span class='line'>bfb49285 * <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> init commit
</span></code></pre></td></tr></table></div></figure>


<p>두개의 <code>topic</code> 모두 <code>pull-request</code> 상태이고(github 을 사용한다고
가정합니다), 매니저가 <code>topic1</code> 을 <em>merge</em> 합니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ed02ed2e *   <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> Merged in aanoaa/test/topic1 <span class="o">(</span>pull request <span class="c">#1)</span>
</span><span class='line'>         |<span class="se">\ </span>
</span><span class='line'>c94f01bb | * <span class="o">[</span>origin/topic1<span class="o">]</span> <span class="o">[</span>topic1<span class="o">]</span> add b.c
</span><span class='line'>90d550b0 | * add a.c
</span><span class='line'>         |/
</span><span class='line'>bfb49285 * init commit
</span></code></pre></td></tr></table></div></figure>


<p><code>topic1</code> 이 먼저 <em>merge</em> 되었기에 <code>topic2</code> 에서 <code>master</code> 를 <em>rebase</em>
합니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>963cd74c * <span class="o">[</span>topic2<span class="o">]</span> add e.c
</span><span class='line'>fcaba0cc * add d.c
</span><span class='line'>f28849aa * add c.c
</span><span class='line'>ed02ed2e *   <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> Merged in aanoaa/test/topic1 <span class="o">(</span>pull request <span class="c">#1)</span>
</span><span class='line'>         |<span class="se">\ </span>
</span><span class='line'>c94f01bb | * <span class="o">[</span>origin/topic1<span class="o">]</span> <span class="o">[</span>topic1<span class="o">]</span> add b.c
</span><span class='line'>90d550b0 | * add a.c
</span><span class='line'>         |/
</span><span class='line'>bfb49285 * init commit
</span></code></pre></td></tr></table></div></figure>


<p><em>rebase</em> 되었기 때문에 <code>topic2</code> 는 <code>origin/topic2 HEAD</code> 를 잃습니다.
이때 <code>push</code> 하게 되면 <code>reject</code> 됩니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git push origin topic2
</span><span class='line'>To ssh://git@example.com/aanoaa/test.git
</span><span class='line'> ! <span class="o">[</span>rejected<span class="o">]</span>        topic2 -&gt; topic2 <span class="o">(</span>non-fast-forward<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>여기서 다른 사람들은 어떻게 처리하는지가 궁금합니다.
두개의 방법이 있을 수 있습니다.</p>

<ul>
<li><code>$ git pull &amp;&amp; git push</code> <em>non-fast-forward</em> 이기 때문에 쉽게 생각할 수
있는 방법입니다.</li>
<li><code>$ git push --force origin topic2</code> remote 의 이력을 바꿔버립니다.</li>
</ul>


<p>첫번째 방법으로 해결했을때는 <code>topic2</code> 에서 작업한 이력이 두번씩 남게
됩니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>9647d196 *   <span class="o">[</span>topic2<span class="o">]</span> Merge branch <span class="s1">&#39;topic2&#39;</span> of ssh://example.com/aanoaa/test into topic2
</span><span class='line'>         |<span class="se">\ </span>
</span><span class='line'>b9f6b81a | * <span class="o">[</span>origin/topic2<span class="o">]</span> add e.c
</span><span class='line'>95ea73d0 | * add d.c
</span><span class='line'>2a44208b | * add c.c
</span><span class='line'>963cd74c * | <span class="o">[</span>ref-topic2<span class="o">]</span> add e.c
</span><span class='line'>fcaba0cc * | add d.c
</span><span class='line'>f28849aa * | add c.c
</span><span class='line'>ed02ed2e * |   <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> Merged in aanoaa/test/topic1 <span class="o">(</span>pull request <span class="c">#1)</span>
</span><span class='line'>         |<span class="se">\ \ </span>
</span><span class='line'>         | |/
</span><span class='line'>         |/|
</span><span class='line'>c94f01bb | * <span class="o">[</span>origin/topic1<span class="o">]</span> <span class="o">[</span>topic1<span class="o">]</span> add b.c
</span><span class='line'>90d550b0 | * add a.c
</span><span class='line'>         |/
</span><span class='line'>bfb49285 * init commit
</span></code></pre></td></tr></table></div></figure>


<p><em>rebase</em> 의 동작방식을 이해한다면 당연한 결과입니다. 마지막의 <em>merge</em>
 커밋도 <em>pull</em> 을 사용했기 때문에 이해할 수 있습니다.</p>

<p>두번째 방식을 사용한다면 아까 <code>topic2</code> 에서 <code>master</code> 를 <em>rebase</em>
했을때의 이력을 가지게 됩니다만 공동작업에서 remote 의 이력을 변경하게
되는 것이라서 부담이 생깁니다.</p>

<p>두개의 결과는 같습니다만 첫번째는 중복된 이력을 가지게 되고, 두번째는
협업간에 불화가 생길 수 있습니다.</p>

<p>어떻게들 사용하시나요?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome Scrollbar Style]]></title>
    <link href="http://aanoaa.github.io/blog/2012/07/02/chrome-scrollbar-style/"/>
    <updated>2012-07-02T12:50:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/07/02/chrome-scrollbar-style</id>
    <content type="html"><![CDATA[<p><code>$HOME/.config/google-chrome/Default/User StyleSheets/Custom.css</code> 에다가
아래 내용을 추가하면 scroll-bar 가 얄상하니 이쁩니다.</p>

<p>근데 불편해서 안쓸라고.. 나중에 검색하기 힘들까봐 로그 남겨 둡니다.</p>

<figure class='code'><figcaption><span>$HOME/.config/google-chrome/Default/User StyleSheets/Custom.css</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">:</span><span class="nd">:-webkit-scrollbar-track-piece</span><span class="p">{</span>
</span><span class='line'>    <span class="k">background-color</span><span class="o">:</span><span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>    <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nd">:-webkit-scrollbar</span><span class="p">{</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span><span class="m">12px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span><span class="m">8px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nd">:-webkit-scrollbar-thumb</span><span class="p">{</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span><span class="m">50px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">background-color</span><span class="o">:</span><span class="m">#999</span><span class="p">;</span>
</span><span class='line'>    <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">4px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">outline</span><span class="o">:</span><span class="m">2px</span> <span class="k">solid</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>    <span class="k">outline</span><span class="o">-</span><span class="n">offset</span><span class="o">:-</span><span class="m">2px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">border</span><span class="o">:</span> <span class="m">2px</span> <span class="k">solid</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nd">:-webkit-scrollbar-thumb:hover</span><span class="p">{</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span><span class="m">50px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">background-color</span><span class="o">:</span><span class="m">#9f9f9f</span><span class="p">;</span>
</span><span class='line'>    <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">4px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perl Y Operator]]></title>
    <link href="http://aanoaa.github.io/blog/2012/06/21/perl-y-operator/"/>
    <updated>2012-06-21T13:59:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/06/21/perl-y-operator</id>
    <content type="html"><![CDATA[<h2>사건의 발단</h2>

<p>어느날 오후 @freenode #perl-kr 에서 일어난 일입니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;a3r0_&gt; 오랜만에 퀴즈
</span><span class='line'>&lt;a3r0_&gt; 구글 입사문제인데
</span><span class='line'>&lt;a3r0_&gt; 1에서 100000 사이에 8이 몇번 나오는지 맞춰라~
</span><span class='line'>&lt;a3r0_&gt; 답은 perl 원라이너로만 받음</span></code></pre></td></tr></table></div></figure>


<p>저는 손으로 세봤습니다. 100 까지 세는데, 한참 걸렸습니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>8,18,28,38,48,58,68,78,80,81,82,83,84,85,86,87,88,89,98 
</span><span class='line'>20개 (88에서 8이 두개 입니다)</span></code></pre></td></tr></table></div></figure>


<p>이렇게 세어보고 다시 irc 화면을 봤는데..</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="sr">&lt;EnGoon&gt;</span> <span class="nb">eval</span> <span class="k">my</span> <span class="nv">$count</span> <span class="o">=</span><span class="mi">0</span><span class="p">;</span> <span class="k">for</span> <span class="p">(</span><span class="mi">0</span><span class="o">..</span><span class="mi">100000</span><span class="p">)</span> <span class="p">{</span> <span class="sr">/(8)/</span><span class="p">;</span> <span class="nv">$count</span> <span class="o">+=</span> <span class="vg">$+</span><span class="p">;}</span> <span class="k">print</span> <span class="nv">$count</span><span class="p">;</span>
</span><span class='line'><span class="sr">&lt;hongbot&gt;</span> <span class="mi">799944</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="err">구글</span> <span class="err">입사</span> <span class="err">불합격</span> <span class="err">하셨습니다</span><span class="o">.</span>
</span><span class='line'><span class="sr">&lt;ascendo&gt;</span> <span class="k">for</span> <span class="n">i</span> <span class="n">in</span> <span class="nv">$</span><span class="err">(</span><span class="nv">seq</span> <span class="mi">1</span> <span class="mi">100000</span><span class="p">);</span> <span class="k">do</span> <span class="n">echo</span> <span class="nv">$i</span><span class="p">;</span> <span class="n">done</span> <span class="o">|</span> <span class="n">egrep</span> <span class="s">&#39;8&#39;</span> <span class="o">|</span> <span class="n">wc</span> <span class="o">-</span><span class="n">l</span> <span class="c1"># syntax error</span>
</span></code></pre></td></tr></table></div></figure>


<p>떡밥이 흥하질 않자 <code>a3r0</code> 님이 정답을 공개해 주셧습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="nv">$</span> <span class="nv">perl</span> <span class="o">-</span><span class="n">E</span> <span class="s">&#39;for(1..100000) { $c+=@{[$_ =~ m/8/g]} }; say $c&#39;</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="mi">50000</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="nv">$</span> <span class="nv">perl</span> <span class="o">-</span><span class="n">E</span> <span class="s">&#39;for(1..100000) { $c+=(tr/8//) }; say $c&#39;</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="mi">50000</span>
</span></code></pre></td></tr></table></div></figure>


<p>이렇게 묻히나 싶었는데, 뒤늦게 보신 <code>nol2ter_work</code> 님의 bash oneliner</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&lt;nol2ter_work&gt; 오홍.. bash 로는.. expr <span class="sb">`</span><span class="nb">echo</span> <span class="o">{</span>1..100000<span class="o">}</span> | sed -r <span class="s2">&quot;s/[^8]//g&quot;</span> | wc -m<span class="sb">`</span> - 1 로 되네영..
</span><span class='line'>&lt;a3r0_&gt; python으로 해보셈
</span></code></pre></td></tr></table></div></figure>


<p><strong>여기서 python 의 대반격</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&lt;</span><span class="n">nol2ter_work</span><span class="o">&gt;</span> <span class="err">피똥으로</span><span class="o">..</span> <span class="nb">str</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">100000</span><span class="p">))</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s">&#39;8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">nol2ter_work</span><span class="o">&gt;</span> <span class="err">아</span><span class="o">..</span> <span class="err">이건</span> <span class="err">편법일라나요</span> <span class="err">캬캬캬</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">a3r0_</span><span class="o">&gt;</span> <span class="nb">str</span> <span class="err">함수가</span> <span class="err">문자열</span> <span class="err">이어붙여주나여?</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">nol2ter_work</span><span class="o">&gt;</span> <span class="o">&gt;&gt;&gt;</span> <span class="nb">str</span><span class="p">(</span><span class="nb">range</span><span class="p">(</span><span class="mi">100000</span><span class="p">))</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s">&#39;8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">nol2ter_work</span><span class="o">&gt;</span> <span class="mi">50000</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">nol2ter_work</span><span class="o">&gt;</span> <span class="err">라고</span> <span class="err">나오긴</span> <span class="err">하네용</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">a3r0_</span><span class="o">&gt;</span> <span class="err">오</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">jeen___</span><span class="o">&gt;</span> <span class="err">피똥이</span> <span class="err">갑이네</span><span class="o">..</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">jeen___</span><span class="o">&gt;</span> <span class="err">피똥배워야지</span><span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>분위기가 술렁이기 시작했습니다.
파이썬으로 저렇게 그레이스풀한 방법이 잇엇나 싶기도 했습니다.
거기에 더해 <code>진사마</code>는 파이썬으로 갈아탈 준비를 마친 상태.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="n">say</span> <span class="s">&quot;@{[0..100000]}&quot;</span><span class="o">=~</span><span class="n">y</span><span class="sr">/8/</span><span class="o">/</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="n">str</span><span class="p">(</span><span class="n">range</span><span class="p">(</span><span class="mi">100000</span><span class="p">))</span><span class="o">.</span><span class="n">count</span><span class="p">(</span><span class="s">&#39;8&#39;</span><span class="p">)</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="mi">2</span><span class="err">글자</span> <span class="err">승</span><span class="p">?</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="n">say</span> <span class="err">빼면</span> <span class="mi">6</span><span class="err">글자</span> <span class="err">승</span><span class="p">?</span>  <span class="p">[</span><span class="mi">13</span><span class="p">:</span><span class="mi">40</span><span class="p">]</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="nv">$</span> <span class="nv">perl</span> <span class="o">-</span><span class="n">E</span> <span class="s">&#39;say &quot;@{[0..100000]}&quot;=~y/8//&#39;</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="mi">50000</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="err">줄이기</span> <span class="err">최종버젼은</span> <span class="s">&quot;@{[0..1E5]}&quot;</span><span class="o">=~</span><span class="n">y</span><span class="sr">/8/</span><span class="o">/</span>
</span><span class='line'><span class="sr">&lt;nol2ter_work&gt;</span> <span class="err">달달달</span>
</span></code></pre></td></tr></table></div></figure>


<p>찰나 <code>a3r0</code> 님의 신의 한수
결국 <code>1E5</code> 까지쓰며 더 줄일 수 없도록 만들었습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="sr">&lt;jeen___&gt;</span> <span class="mf">1E5</span> <span class="err">ㅋㅋㅋㅋ</span>
</span></code></pre></td></tr></table></div></figure>


<p>저만 여기서 터진게 아니엇습니다.
이때, 원라이너의 귀재 <code>pung96</code>님의 등장</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="o">***</span> <span class="n">pung96</span> <span class="p">(</span><span class="o">~</span><span class="n">pung96</span><span class="nv">@46</span><span class="mf">.162.162.115</span><span class="p">)</span> <span class="n">has</span> <span class="n">joined</span> <span class="n">channel</span> <span class="c1">#perl-kr</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="err">원라이너의</span> <span class="err">귀재</span> <span class="n">pung96</span><span class="err">님</span> <span class="err">오셨</span>
</span></code></pre></td></tr></table></div></figure>


<p>같은 문제를 내어 봤는데 역시나 금방 답이 나오더군요.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="sr">&lt;pung96&gt;</span> <span class="err">그냥</span><span class="p">,,</span> <span class="err">초</span> <span class="err">단순하게</span> <span class="err">생각하면</span><span class="p">,,</span>
</span><span class='line'><span class="sr">&lt;pung96&gt;</span> <span class="nb">map</span><span class="p">{</span><span class="nv">$s</span><span class="o">+=</span><span class="p">()</span><span class="o">=</span><span class="sr">/8/g</span><span class="p">}</span><span class="mi">1</span><span class="o">..</span><span class="mi">100000</span><span class="p">;</span><span class="n">say</span><span class="nv">$s</span> <span class="err">이럼</span> <span class="err">되는데</span>
</span></code></pre></td></tr></table></div></figure>


<p>이쯤에서 짧은 답안 공개</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="s">&quot;@{[0..1E5]}&quot;</span><span class="o">=~</span><span class="n">y</span><span class="sr">/8/</span><span class="o">/</span>
</span><span class='line'><span class="sr">&lt;pung96&gt;</span> <span class="err">헐</span><span class="p">,</span>
</span><span class='line'><span class="sr">&lt;pung96&gt;</span> <span class="mf">1E5</span> <span class="o">...</span>
</span></code></pre></td></tr></table></div></figure>


<p>ㅋㅋㅋ <code>1E5</code></p>

<p>계속되는 덕질</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="nb">map</span><span class="p">{</span><span class="nv">$s</span><span class="o">+=</span><span class="p">()</span><span class="o">=</span><span class="sr">/8/g</span><span class="p">}</span><span class="mi">1</span><span class="o">..</span><span class="mi">100000</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="nb">map</span><span class="p">{</span><span class="nv">$s</span><span class="o">+=</span><span class="nv">@</span><span class="p">{[</span><span class="sr">/8/g</span><span class="p">]}}</span><span class="mi">1</span><span class="o">..</span><span class="mi">100000</span>
</span><span class='line'><span class="sr">&lt;pung96&gt;</span> <span class="nb">map</span><span class="p">{</span><span class="nv">$s</span><span class="o">+=</span><span class="n">y</span><span class="sr">/8/</span><span class="o">/</span><span class="p">}</span> <span class="err">이럼</span><span class="p">,,</span> <span class="err">좀더</span> <span class="err">짧아지는군요</span><span class="o">.</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="nb">map</span><span class="p">{</span><span class="nv">$s</span><span class="o">+=</span><span class="n">y</span><span class="sr">/8/</span><span class="o">/</span><span class="p">}</span><span class="mi">1</span><span class="o">..</span><span class="mf">1E5</span>
</span><span class='line'><span class="sr">&lt;a3r0_&gt;</span> <span class="s">&quot;@{[1..1E5]}&quot;</span><span class="o">=~</span><span class="n">y</span><span class="sr">/8/</span><span class="o">/</span>
</span></code></pre></td></tr></table></div></figure>


<p>결국 <code>pung96</code>님의 타이기록</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="sr">&lt;pung96&gt;</span> <span class="nb">map</span><span class="nv">$s</span><span class="o">+=</span><span class="n">y</span><span class="sr">/8/</span><span class="o">/</span><span class="p">,</span><span class="mi">1</span><span class="o">..</span><span class="mf">1E5</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>pung96</code>님의 신기록!</p>

<p>저는 이미 예전에 gg</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="sr">&lt;jeen___&gt;</span> <span class="k">use</span> <span class="n">Alias</span> <span class="p">(</span> <span class="nb">map</span> <span class="o">=&gt;</span> <span class="n">m</span><span class="p">,</span> <span class="k">print</span> <span class="o">=&gt;</span> <span class="n">p</span> <span class="p">);</span>
</span><span class='line'><span class="sr">&lt;pung96&gt;</span> <span class="n">jeen___:</span> <span class="o">++</span>
</span></code></pre></td></tr></table></div></figure>


<p>폭풍같은 시간이었습니다.</p>

<h2>분석</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="s">&quot;@{[0..1E5]}&quot;</span><span class="o">=~</span><span class="n">y</span><span class="sr">/8/</span><span class="o">/</span><span class="p">;</span> <span class="c1"># 50000</span>
</span></code></pre></td></tr></table></div></figure>


<p>아.. 아릅답습니다.</p>

<p>먼저 <code>y</code> operator 를 <code>perldoc</code> 에서 찾아보면,</p>

<p><code>The transliteration operator. Same as tr///. See Quote and Quote-like Operators in perlop.</code></p>

<p><code>tr</code> operator 와 같다고 나옵니다.
<code>tr</code> 의미는 Transliteration(바꿔 씀) 입니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">tr</span><span class="sr">/SEARCHLIST/</span><span class="n">REPLACEMENTLIST</span><span class="o">/</span><span class="n">cdsr</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>cdsr</code> modifier 는 <code>perldoc</code> 에서 못찾았습니다.
그래서 검색했더니 아래와 같은 내용이 있어서 붙입니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="n">c</span> <span class="o">-</span> <span class="n">is</span> <span class="n">used</span> <span class="n">to</span> <span class="n">specify</span> <span class="n">that</span> <span class="n">the</span> <span class="n">SEARCHLIST</span> <span class="n">character</span> <span class="n">set</span> <span class="n">is</span> <span class="n">complemented</span>
</span><span class='line'><span class="n">d</span> <span class="o">-</span> <span class="n">is</span> <span class="n">used</span> <span class="n">to</span> <span class="nb">delete</span> <span class="n">found</span> <span class="n">but</span> <span class="ow">not</span> <span class="n">replaced</span> <span class="n">characters</span>
</span><span class='line'><span class="n">s</span> <span class="o">-</span> <span class="n">is</span> <span class="n">used</span> <span class="n">to</span> <span class="n">specify</span> <span class="n">that</span> <span class="n">the</span> <span class="n">sequences</span> <span class="n">of</span> <span class="n">characters</span> <span class="n">that</span> <span class="n">were</span> <span class="n">transliterated</span> <span class="n">to</span> <span class="n">the</span> <span class="n">same</span> <span class="n">character</span> <span class="n">are</span> <span class="n">squashed</span> <span class="n">down</span> <span class="n">to</span> <span class="n">a</span> <span class="n">single</span>
</span><span class='line'><span class="n">instance</span> <span class="n">of</span> <span class="n">the</span> <span class="n">character</span>
</span><span class='line'>
</span><span class='line'><span class="n">c</span>  <span class="n">Complement</span> <span class="n">the</span> <span class="n">SEARCHLIST</span><span class="o">.</span>
</span><span class='line'><span class="n">d</span>  <span class="n">Delete</span> <span class="n">found</span> <span class="n">but</span> <span class="n">unreplaced</span> <span class="n">characters</span><span class="o">.</span>
</span><span class='line'><span class="n">s</span>  <span class="n">Squash</span> <span class="n">duplicate</span> <span class="n">replaced</span> <span class="n">characters</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>예제</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nv">$ARGV</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=~</span> <span class="nb">tr</span><span class="sr">/A-Z/</span><span class="n">a</span><span class="o">-</span><span class="n">z</span><span class="o">/</span><span class="p">;</span>    <span class="c1"># canonicalize to lower case </span>
</span><span class='line'><span class="nv">$cnt</span> <span class="o">=</span> <span class="nb">tr</span><span class="sr">/*/</span><span class="o">*/</span><span class="p">;</span>             <span class="c1"># count the stars in $_ </span>
</span><span class='line'><span class="nv">$cnt</span> <span class="o">=</span> <span class="nv">$sky</span> <span class="o">=~</span> <span class="nb">tr</span><span class="sr">/*/</span><span class="o">*/</span><span class="p">;</span>     <span class="c1"># count the stars in $sky </span>
</span><span class='line'><span class="nv">$cnt</span> <span class="o">=</span> <span class="nb">tr</span><span class="sr">/0-9/</span><span class="o">/</span><span class="p">;</span>            <span class="c1"># count the digits in $_ </span>
</span><span class='line'><span class="nb">tr</span><span class="sr">/a-zA-Z/</span><span class="o">/</span><span class="n">s</span><span class="p">;</span>               <span class="c1"># bookkeeper -&gt; bokeper </span>
</span><span class='line'><span class="p">(</span><span class="nv">$HOST</span> <span class="o">=</span> <span class="nv">$host</span><span class="p">)</span> <span class="o">=~</span> <span class="nb">tr</span><span class="sr">/a-z/</span><span class="n">A</span><span class="o">-</span><span class="n">Z</span><span class="o">/</span><span class="p">;</span>
</span><span class='line'><span class="nb">tr</span><span class="sr">/a-zA-Z/</span> <span class="o">/</span><span class="n">cs</span><span class="p">;</span>             <span class="c1"># change non-alphas to single space </span>
</span><span class='line'><span class="nb">tr</span> <span class="p">[</span><span class="o">\</span><span class="mi">200</span><span class="o">-\</span><span class="mi">377</span><span class="p">]</span>
</span><span class='line'>   <span class="p">[</span><span class="o">\</span><span class="mo">000</span><span class="o">-\</span><span class="mi">177</span><span class="p">];</span>             <span class="c1"># delete 8th bit</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>tr|y</code> operator 는 <code>SEARCHLIST</code> 가 매칭된 갯수를 반환하는 걸
알겠습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="s">&quot;@{[0..1E5]}&quot;</span><span class="o">=~</span><span class="n">y</span><span class="sr">/8/</span><span class="o">/</span><span class="p">;</span> <span class="c1"># 50000</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="s">&quot;@{[0..1E5]}&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>1E5</code> 는 10의 5 제곱입니다. 해서 -> 1..100000</li>
<li><code>@{[]}</code> 는 array 를 reference 하고 다시 dereference 하는 과정입니다.
이유는 문자열상수 안에서 perl code 를 evaluate 하고 다시 집어넣는
보간(interpolation) 하기 위한 꼼수 입니다.</li>
<li><code>@{[1..100000]}</code> 은 <code>(1, 2, 3, ..., 100000)</code> 을 가지고 있는 array
입니다.</li>
<li><code>"(1,2,3,...,100000)"</code> array 가 <code>"</code> 로 묶여 있으면 <code></code>(SPACE) 를
구분자로 삽입한 scalar 자료형이 됩니다. 즉, &#8216;1 2 3 4 &#8230; 100000&#8217;</li>
<li>&#8221;@{[0..1E5]}&#8221; 는 &#8216;1 2 3 4 &#8230; 100000&#8217; 이 됩니다.</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="s">&#39;1 2 3 ... 100000&#39;</span><span class="o">=~</span><span class="n">y</span><span class="sr">/8/</span><span class="o">/</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>문자열 <code>1 2 3 ... 100000</code> 에 <code>8</code> 이 몇번 나오는지 돌려줍니다.</li>
</ul>


<p>오늘도 즐거운 하루중입니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[같이걸을까 게스트하우스]]></title>
    <link href="http://aanoaa.github.io/blog/2012/04/27/gatigeoleulgga-geseuteuhauseu/"/>
    <updated>2012-04-27T17:43:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/04/27/gatigeoleulgga-geseuteuhauseu</id>
    <content type="html"><![CDATA[<h2>제목은 회이크</h2>

<p>그냥 어제 오늘 있엇던 일을 적을까 합니다.
지금 묵고 있는 데가 <a href="http://www.facebook.com/togetherjeju">같이걸을까 게스트하우스</a> 입니다.
여기 대장님이 블로그 하냐고 물어보셔서 한다고 하니까 포스팅 한개만
해달라고.. 잉여롭던 찰나에 잘됐다 싶어서 올려봅니다.</p>

<h2>워크샵(샾?)</h2>

<p>회사에서 제주도로 워크샵(샾?)을 가게 되었습니다. 랄까 지금 제주돕니다.
공식일정은 <code>4/30(월) ~ 5/4(금)</code> 까지. 용사장++</p>

<p>근데 저는 좀 앞당겨서 목요일날(지금으로선 어제) 왔습니다.</p>

<p><img src="https://lh6.googleusercontent.com/-GZfDcnkoKZs/T5pjdLevt_I/AAAAAAAAACI/D9jC7mPXVAQ/%2525C3%2525AA%2525C2%2525B3%2525C2%2525B5%2525C3%2525AD%2525C2%252595%2525C2%2525AD.jpg" alt="제주도" /></p>

<h2>미라클 게스트하우스</h2>

<p><a href="https://twitter.com/#!/jeen_lee">@jeen</a>님이 미리 손을 써놔서 게스트하우스인데 방을 한개 빌렸습니다.
일본에 있을때 게스트하우스에 묵어봐서 여인숙정도겠거니~
생각했는데(여인숙 안가봤지만..) 너무 잘해놔서 놀랐습니다. 이 무슨
병신같은 말이냐만 저의 마이너한 성향으로서는 너무 잘해놔서
별로라능ㅋㅋ</p>

<p><img src="https://lh6.googleusercontent.com/-xmrIg8p3dio/T5pnBDf_PNI/AAAAAAAAACU/w0xsaKy41cM/%2525C3%2525AB%2525C2%2525AF%2525C2%2525B8%2525C3%2525AB%2525C2%25259D%2525C2%2525BC%2525C3%2525AD%2525C2%252581%2525C2%2525B4.jpg" alt="미라클" /></p>

<p>친절하고, 픽업도 해주고, 밥도 먹을 수 있고, 자전거, 책 도 빌려주고
온수도 빠방하고 다 좋았습니다.</p>

<h2>짜장면</h2>

<p>근데 짜장면이 먹고 싶었습니다.
검색해서 동네 짱개집으로 ㄱㄱ</p>

<p><img src="https://lh3.googleusercontent.com/-fY-9EEpLKJ0/T5pothlejmI/AAAAAAAAAC0/127sZpZThRk/%2525C3%2525AC%2525C2%2525B2%2525C2%25259C%2525C3%2525AC%2525C2%252599%2525C2%252595%2525C3%2525AC%2525C2%252584%2525C2%2525B1.png" alt="천왕성" /></p>

<p><img src="https://lh3.googleusercontent.com/-bpI6buaYNgo/T5poSUELlvI/AAAAAAAAACk/lD55-dknihg/%2525C3%2525AC%2525C2%2525A7%2525C2%25259C%2525C3%2525AC%2525C2%25259E%2525C2%2525A5%2525C3%2525AB%2525C2%2525A9%2525C2%2525B4.jpg" alt="짜장면" /></p>

<p><img src="https://lh4.googleusercontent.com/-u5qSLy9Pt-4/T5poPuSPClI/AAAAAAAAACc/ogiPOP6BRRk/%2525C3%2525AC%2525C2%2525A7%2525C2%25259C%2525C3%2525AC%2525C2%25259E%2525C2%2525A5.jpg" alt="짜장" /></p>

<p>전설의 中 짜리 탕수육</p>

<p><img src="https://lh4.googleusercontent.com/-7Whecv6cE4Q/T5poWQK0TDI/AAAAAAAAACs/VKZsbUTMuFw/%2525C3%2525AD%2525C2%252583%2525C2%252595%2525C3%2525AC%2525C2%252588%2525C2%252598%2525C3%2525AC%2525C2%25259C%2525C2%2525A1.jpg" alt="전설의 탕수육 中 짜리" /></p>

<p>인심이 너무 좋아서 맛잇게 많이 먹엇습니다.</p>

<h2>같이걸을까 게스트하우스</h2>

<p>짜장면 먹고 일행과 헤어지고 주변 게스트하우스 검색해봤더니 평가가
<strong>오성급</strong>이라서 여기로 결정했습니다.</p>

<p><img src="https://lh3.googleusercontent.com/-dTwRlBj2vLM/T5pqWTbHReI/AAAAAAAAAC8/kR1Fz3TiBmI/%2525C3%2525AC%2525C2%252598%2525C2%2525A4%2525C3%2525AC%2525C2%252584%2525C2%2525B1%2525C3%2525AA%2525C2%2525B8%2525C2%252589.png" alt="오성급" /></p>

<p>올레길 <strong>17코스</strong> 근처입니다만 좀 숨어 있습니다. 저는 스쿠터 타고와서 지도
보고 왔는데 버스 타고오면 <code>외도 파출소</code> 에서 내리면 걸어서 5분입니다.</p>

<p>친구네집 놀러온 느낌입니다. <a href="http://www.facebook.com/togetherjeju">여기</a>에서 사진보세여.
무계획으로 있엇는데 대장님이 어디어디 괜찮을 거라고 추천해줘서 거기
갓다가 아마 내일도 여기에 묵지 않을까 싶습니다. 맥주도 맨드신다고..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[backbon.js Jsonp Collection Sync]]></title>
    <link href="http://aanoaa.github.io/blog/2012/02/27/backbon-dot-js-jsonp-collection-sync/"/>
    <updated>2012-02-27T05:07:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/02/27/backbon-dot-js-jsonp-collection-sync</id>
    <content type="html"><![CDATA[<p>외부 도메인을 사용하고자 할때 <code>jsonp</code> 를 이용해야 하는데,
이때, <code>Backbone.sync</code> 메소드를 override 해서 쓸 수 있습니다.</p>

<p>jquery <code>$.ajax</code> 메소드의 옵션을 보면 <code>dataType</code>을 <code>jsonp</code>로 설정하면
<code>url</code> 꽁지에 자동으로 <code>?callback=jqueryblablablabla_timestamp</code>
query_parameter 를 추가해줍니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="k">class</span> <span class="nx">MyCollection</span> <span class="k">extends</span> <span class="nx">Backbone</span><span class="p">.</span><span class="nx">Collection</span>
</span><span class='line'>  <span class="nv">model: </span><span class="nx">Log</span>
</span><span class='line'>  <span class="nv">sync: </span><span class="nf">(method, model, options) -&gt;</span>
</span><span class='line'>    <span class="nv">options.dataType = </span><span class="s">&#39;jsonp&#39;</span>
</span><span class='line'>    <span class="nx">Backbone</span><span class="p">.</span><span class="nx">sync</span><span class="p">(</span><span class="nx">method</span><span class="p">,</span> <span class="nx">model</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="nv">collection = </span><span class="k">new</span> <span class="nx">MyCollection</span>
</span><span class='line'><span class="nv">collection.url = </span><span class="s">&#39;http://otherdomain.com&#39;</span>
</span><span class='line'><span class="nx">collection</span><span class="p">.</span><span class="nx">fetch</span> <span class="c1"># 요래하면 GET/ http://otherdomain.com?callback=jqueryblablablabla_timestamp</span>
</span><span class='line'>  <span class="nv">success: </span><span class="nf">(collection, response) -&gt;</span>
</span><span class='line'>    <span class="c1"># do something</span>
</span><span class='line'>  <span class="nv">error: </span><span class="nf">(collection, response) -&gt;</span>
</span><span class='line'>    <span class="c1"># error handling</span>
</span></code></pre></td></tr></table></div></figure>


<p>서버로부터 응답은 요래 와야..</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">jqueryblablablabla_timestamp</span><span class="p">(</span><span class="o">&lt;</span><span class="nx">stringifiedJSON</span><span class="o">&gt;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Bitlbee]]></title>
    <link href="http://aanoaa.github.io/blog/2012/01/06/bitlbee/"/>
    <updated>2012-01-06T18:49:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/01/06/bitlbee</id>
    <content type="html"><![CDATA[<p>근데 제가 <a href="http://www.bitlbee.org/main.php/news.r.html">BitlBee</a> 를
사용하는 이유는 바로 이겁니다.</p>

<blockquote><p>BitlBee brings IM (instant messaging) to IRC clients. It&#8217;s a great
solution for people who have an IRC client running all the time and
don&#8217;t want to run an additional MSN/AIM/whatever client.</p></blockquote>

<p>irc client 로는 emacs <a href="http://www.emacswiki.org/emacs/ERC">erc</a> 를
사용합니다.</p>

<p>메신져는 <a href="http://www.google.com/talk/">gtalk</a> 을 씁니다.</p>

<p>꼭 erc 를 사용하지 않더라도 bitlbee 를 통해, 선호하는 irc client
안에서 IM 서비스를 이용할 수 있습니다.</p>

<h2>설치</h2>

<p>우분투에서..</p>

<pre><code>$ sudo apt-get install bitlbee
</code></pre>

<h2>사용</h2>

<ul>
<li>irc client 설정파일에 localhost:6667 에 연결하도록 추가합니다.</li>
<li>접속합니다.</li>
<li><p>&amp;bitlbee 버퍼에 다음과 같이 설정합니다.</p>

<pre><code>  ERC&gt; account add jabber username@gmail.com mypasswd talk.google.com:5223:ssl
  ERC&gt; save
</code></pre></li>
</ul>


<p>안될수도 있습니다.
저도 예전에 한번 설정하고 까먹엇거든요.
검색해서 잘 해보세요</p>

<p>아무튼 접속되었으면 <code>ERC&gt; /query ID</code> 해서 슥슥
대화합니다. 편리합니다. 좋습니다.</p>

<p>누가 말시키면 그냥 버퍼 나뉘어져서 바로 보여요</p>

<p><img src="http://www.bitlbee.org/img/comic_3.0.png" alt="comic" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Org-mode]]></title>
    <link href="http://aanoaa.github.io/blog/2012/01/06/org-mode/"/>
    <updated>2012-01-06T14:55:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/01/06/org-mode</id>
    <content type="html"><![CDATA[<ul>
<li><a href="https://mail.google.com/mail/help/tasks/">Google tasks</a></li>
<li><a href="http://www.rememberthemilk.com/">remember the milk</a></li>
<li><a href="http://tadalist.com/">Tada list</a></li>
<li><a href="https://trello.com/">trello</a></li>
<li><a href="https://workflowy.com/">workflowy</a></li>
<li>그냥 <code>excel</code></li>
</ul>


<p>제가 그간 거쳐왔던 훌륭한 task 관리 툴입니다.
근데 저는 몇일 쓰다보면 못쓰겟더라고요.</p>

<p>그리고 얼마전에 emacs <code>org-mode</code> 라는 것을 알게 되었습니다. org-mode
참 좋습니다. pdf, excel, plain/text, html, latex, .. 으로 export 되고
단축키로 뿅뿅 눌러서 TODO 관리도 할 수 있고 emacs 안에서, 오프라인에서
일정관리도 되고, 태그도 되고, 해야할 일을 쉽게 내 todo 에 올릴 수도
있고요..</p>

<p>기능도 많고 안되는게 없고 문서화도 아주 잘되어 있습니다 android,
iphone app 도 있습니다. 근데 배우고 알아야 할게 너무 많습니다.</p>

<p>되돌아 보면, github issue 만 사용할때 가장 업무 효율이 높았던 것
같습니다.</p>

<p>github 만세입니다.</p>

<h3>결론은 버킹검</h3>

<p>아아 뭔소리래..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Picasa Upload Script]]></title>
    <link href="http://aanoaa.github.io/blog/2012/01/03/picasa-upload-script/"/>
    <updated>2012-01-03T23:18:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/01/03/picasa-upload-script</id>
    <content type="html"><![CDATA[<div><script src='https://gist.github.com/1444684.js'></script>
<noscript><pre><code>username: &#39;pung96a@gmail.com&#39;
password: &#39;&#39;
album_id: &#39;&#39;
</code></pre></noscript></div>


<p><code>$HOME/.google.conf</code> 에다가 자신의 계정 정보를 슥슥하고요.</p>

<p><strong>이중보안 설정한 계정은 업로드 안됩니다.</strong></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>picasa-upload.pl &lt;PHOTO.png&gt;
</span></code></pre></td></tr></table></div></figure>


<pre><code>https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/2011082200618_10.jpg
</code></pre>

<p>제가 샘플로 올린 이미지 퍼블릭 링크입니다.</p>

<p><code>어쩌고저쩌고/s[SIZE]/파일명.jpg</code> 으로 바꾸면 파일크기가 바뀌어서
보여집니다. 굳 :+1:</p>

<pre><code>https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s72/2011082200618_10.jpg
https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s144/2011082200618_10.jpg
https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s200/2011082200618_10.jpg
https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s320/2011082200618_10.jpg
https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s400/2011082200618_10.jpg
https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s512/2011082200618_10.jpg
</code></pre>

<ul>
<li>s72</li>
<li>s144</li>
<li>s200</li>
<li>s320</li>
<li>s400</li>
<li>s512</li>
<li>s576</li>
<li>s640</li>
<li>s720</li>
<li>s800</li>
<li>s912</li>
<li>s1024</li>
<li>s1152</li>
<li>s1280</li>
<li>s1440</li>
<li>s1600</li>
</ul>


<p>뭐 사이즈는 요로코롬 슥슥해서 쓰면 되겠죠.</p>

<p><img src="https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/2011082200618_10.jpg" alt="원본" /></p>

<p>원본이고요</p>

<p><img src="https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s72/2011082200618_10.jpg" alt="s72" />
<img src="https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s144/2011082200618_10.jpg" alt="s144" />
<img src="https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s200/2011082200618_10.jpg" alt="s200" />
<img src="https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s320/2011082200618_10.jpg" alt="s320" />
<img src="https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s400/2011082200618_10.jpg" alt="s400" />
<img src="https://lh4.googleusercontent.com/-mmv40wXKaM4/TwMP0BKUVhI/AAAAAAAAABA/AM3KBgCuf8Q/s512/2011082200618_10.jpg" alt="s512" /></p>

<p>72, 144, 200, 320, 400, 512 입니다.</p>

<p>파일 한개를 간편하게 올려서 요로코롬 크기를 조절해가면서 사용할 수
있습니다.
게다가 <strong>무료</strong>! google++</p>

<p>편리한 스크립트를 맨들어주시고 유용한 팁까지 알려주신
<a href="https://twitter.com/pung96">@pung96</a>++ 님 감사합니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sass &amp; Scss]]></title>
    <link href="http://aanoaa.github.io/blog/2011/12/17/sass-and-scss/"/>
    <updated>2011-12-17T00:08:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2011/12/17/sass-and-scss</id>
    <content type="html"><![CDATA[<p><code>oops.scss</code> 파일을 아래처럼 맨들고,</p>

<figure class='code'><figcaption><span>oops.scss</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='scss'><span class='line'><span class="k">@import</span> <span class="s2">&quot;compass/css3&quot;</span><span class="p">;</span>
</span><span class='line'><span class="nn">#header</span><span class="o">,</span><span class="nn">#footer</span> <span class="p">{</span>
</span><span class='line'>    <span class="na">margin</span><span class="o">:</span> <span class="mi">0</span> <span class="no">auto</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nc">.error</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">@include</span><span class="nd"> border-radius</span><span class="p">(</span><span class="mi">5</span><span class="kt">px</span><span class="p">);</span>
</span><span class='line'>    <span class="na">background-color</span><span class="o">:</span> <span class="mh">#DD0000</span><span class="p">;</span>
</span><span class='line'>    <span class="nc">.important</span> <span class="p">{</span>
</span><span class='line'>        <span class="na">border-width</span><span class="o">:</span> <span class="mi">3</span><span class="kt">px</span><span class="p">;</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>콤퓨타로 뭔가를 하면,</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sass --watch oops.scss:oops.css
</span><span class='line'>
</span><span class='line'>or
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>compass watch /path/to/     <span class="c"># 끝판왕임 저는 이렇게 씀</span>
</span><span class='line'>
</span><span class='line'>or
</span><span class='line'>
</span><span class='line'><span class="c"># emacs scss-mode 쓰면 그냥 저장함과 동시에 변환할 수 있는데 compass</span>
</span><span class='line'><span class="c"># 의 기능은 사용할 수 없음</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>oops.css</code> 파일을 맨들어 줍니다.</p>

<figure class='code'><figcaption><span>oops.css</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="c">/* line 2, ../sass/oops.scss */</span>
</span><span class='line'><span class="nf">#header</span><span class="o">,</span> <span class="nf">#footer</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">margin</span><span class="o">:</span> <span class="m">0</span> <span class="k">auto</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="c">/* line 5, ../sass/oops.scss */</span>
</span><span class='line'><span class="nc">.error</span> <span class="p">{</span>
</span><span class='line'>  <span class="o">-</span><span class="n">moz</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">5px</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">5px</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">o</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">5px</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">ms</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">5px</span><span class="p">;</span>
</span><span class='line'>  <span class="o">-</span><span class="n">khtml</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">5px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span> <span class="m">5px</span><span class="p">;</span>
</span><span class='line'>  <span class="k">background-color</span><span class="o">:</span> <span class="m">#DD0000</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="c">/* line 8, ../sass/oops.scss */</span>
</span><span class='line'><span class="nc">.error</span> <span class="nc">.important</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">border-width</span><span class="o">:</span> <span class="m">3px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>이처럼 <a href="http://sass-lang.com/">sass</a>는 <code>.sass</code> 또는 <code>.scss</code>를 <code>.css</code>로 맨들어 줍니다.</p>

<p>장점으로는 <code>oops.scss</code>에서 <code>@include border-radius(5px);</code> 를 보듯이
함수와 변수를 사용할 수 있다는 것입니다. 코드의 중복을 막아주고(Don&#8217;t
Repeat Yourself), 셀렉터들의 계층을 두어서 쉽게 작성할 수 있습니다.
<code>compass</code>를 함께 사용하면 이미 흔하게 사용되고 있는 선조들의 <code>best
practice</code>를 <code>import</code> 해서 쓸 수 있습니다.</p>

<h1>설치 및 사용</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>gem install sass compass    <span class="c"># 저는 compass도 씀</span>
</span><span class='line'><span class="nv">$ </span>compass create /path/to/Your-Awesome-Project/
</span><span class='line'><span class="c"># config.rb 를 수정하고, stylesheets, sass, images 등의 경로를</span>
</span><span class='line'><span class="c"># 프로젝트 환경에 맞게 바꿔줍니다. rails 라면 필요없어 보입니다.</span>
</span><span class='line'><span class="nv">$ </span>compass watch .    <span class="c"># config.rb 있는 곳을 지정해 줘야 합니다.</span>
</span><span class='line'><span class="c"># scss 파일을 수정하면 css 파일에도 반영됩니다.</span>
</span></code></pre></td></tr></table></div></figure>


<p>저는 <code>config.rb</code> 를 다음과 같이 변경해서 사용중입니다.</p>

<figure class='code'><figcaption><span>config.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">http_path</span> <span class="o">=</span> <span class="s2">&quot;/&quot;</span>
</span><span class='line'><span class="n">css_dir</span> <span class="o">=</span> <span class="s2">&quot;static/css&quot;</span>
</span><span class='line'><span class="n">sass_dir</span> <span class="o">=</span> <span class="s2">&quot;static/sass&quot;</span>
</span><span class='line'><span class="n">images_dir</span> <span class="o">=</span> <span class="s2">&quot;static/images&quot;</span>
</span><span class='line'><span class="n">javascripts_dir</span> <span class="o">=</span> <span class="s2">&quot;static/scripts&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>그밖에..</h1>

<p>emacs <a href="http://www.emacswiki.org/emacs/ScssMode">scss-mode</a>를 사용하면 watcher 를 띄우지 않고도
저장과 동시에 <code>css</code>파일을 맨들 수 있습니다.</p>

<figure class='code'><figcaption><span>config.rb</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="p">(</span><span class="n">add</span><span class="o">-</span><span class="n">to</span><span class="o">-</span><span class="n">list</span> <span class="s1">&#39;load-path &quot;~/.emacs.d/vendor/scss-mode&quot;)</span>
</span><span class='line'><span class="s1">(require &#39;</span><span class="n">scss</span><span class="o">-</span><span class="n">mode</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><a href="http://blueprintcss.org/">blueprint</a>와 같은 grid framework 와 함께 사용할 수
있습니다. 저는 그렇게 쓰고 있습니다.</p>

<p><code>octopress</code> 도 <code>scss</code>사용합니다.</p>

<h1>결론</h1>

<p><code>ruby</code> 모듈이자 툴입니다. 저희 회사는 <code>perl</code>로 개발합니다만 물론
사용할 수 있습니다. 너무나도 훌륭한 오픈소스 입니다.</p>

<p>훌륭한 개발환경을 가지고 있고, 프로그래밍에는 능숙하지만, <code>css</code>만
잡으면 한없이 약해지는 분들이라면 간단한 <code>scss</code>문법을 공부하고
<code>compass</code>툴 사용법을 익혀서 써먹으면 좋을 것 같습니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Emacs Mo-git-blame Mode]]></title>
    <link href="http://aanoaa.github.io/blog/2011/12/02/emacs-mo-git-blame-mode/"/>
    <updated>2011-12-02T15:07:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2011/12/02/emacs-mo-git-blame-mode</id>
    <content type="html"><![CDATA[<h2>프로젝트 환경</h2>

<p><a href="http://www.facebook.com/silexkr">silex</a>라는 조그마한 회사를 댕기고 있습니다.</p>

<p>소스관리는 <a href="http://git-scm.com/">git</a>사용하고 있고요, 내부에도 <a href="http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way">gitosis</a>를
운영하고 있긴 하지만, 주요 프로젝트는 <a href="https://github.com/">github</a> 유료 서비스를
사용하고 있습니다. 이슈 관리도 <a href="https://github.com/">github</a>에서
합니다. (버그질라를 사용하는 프로젝트도 있습니다)</p>

<h2>코드리뷰</h2>

<p>아주 느슨합니다.
repo 접근 권한이 있다면 누구나 commit, push 할 수 있습니다.
코드 리뷰는 push후에 프로젝트 참여자가 알아서 합니다.</p>

<blockquote><p>이건 요래서 그지같고, 저건 조래서 다시해라, 발로 썻냐 등등..</p></blockquote>

<p>좋은 얘기도 합니다만, 지적질이 대세를 이루죠.</p>

<p>몇일전에는 바로 옆에서 <a href="https://twitter.com/#!/jeen_lee">jeen</a>님이 그지같이 썻다고 해서
소주병 나발을 불기도 하고 뭐 그랬습니다.</p>

<h2>git blame</h2>

<p>누가 무슨 짓 했는지 다 알 수 있습니다.</p>

<pre><code>519aaa9b (yongbin       2011-07-23 23:23:33 +0900 1) #!/bin/sh
686cb0fb (Yongbin Yu    2011-09-24 15:58:03 +0900 2) TRUNNER_CONFDIR=t/selenium \
2b3e6736 (Hyungsuk Hong 2011-10-13 11:25:22 +0900 3) plackup -Ilib -s Starman -p 3000 -a best_web.psgi --access-log /dev/null
</code></pre>

<h2>문제점 그리고 새로운 인력의 투입</h2>

<ul>
<li>push 했을때 review 하지 못하고 그냥 넘길때가 있습니다(많습니다)</li>
<li>프로젝트 중간에 커밋터 보급받았을때</li>
</ul>


<p>남이 써놓은 코드를 열었는데 그지 같으면 말해줘서 바로 잡아야 합니다.
쓰다보니 거지 같아서 <code>git blame</code>으로 살폈는데 제 코드일 수도 있습니다.</p>

<p>뭐 어찌됐든 이 일련의 과정을 커맨트라인으로 하려면 불편합니다.</p>

<pre><code>while(1) {
    $ git blame oops
    $ git log 72ddf38
}
</code></pre>

<h2><a href="http://www.vim.org/">vim</a> vs <a href="http://www.gnu.org/s/emacs/">emacs</a></h2>

<blockquote><p>@JEEN_LEE,  about 2 hours ago:
  예를 들어 vim 으로 특정 코드부분을 주시한다고 할 때, 어.. 이거 누가
  고쳤지 하는 부분이 있는데&#8230; 그때마다 blame 으로 파일을 지정해서
  찾아보는 데, 그 라인에서 어떻게 바로 뿅하고
  알 수 있게끔 하는 거 없을까.. // from Twitter for iPhone [Seoul,
  Korea]</p></blockquote>

<p>조금 찾아 봤는데 뭐 그런거 없습니다.</p>

<blockquote><p>@semtlnori,  18 minutes ago:
  @JEEN_LEE :exe &#8220;!git blame -L&#8221;.line(&#8220;.&#8221;).&#8221;,&#8221;.line(&#8220;.&#8221;).&#8221; &#8211; %&#8221; 이거
  단축키 바인딩해서 쓰는 방법도 대충 될듯요. // from web [Seoul] in
  reply to JEEN_LEE</p></blockquote>

<p>@semtlnori: ㄱㅅ</p>

<p>회사에서 저만 <a href="http://www.gnu.org/s/emacs/">emacs</a>씁니다.
<code>해서</code>, 찾아봤더니 <a href="https://github.com/voins/mo-git-blame">mo-git-blame</a>이 있었습니다.</p>

<h2>mo-git-blame</h2>

<h3>설치</h3>

<p><code>.emacs.d/vendor/mo-git-blame/mo-git-blame.el</code>을 두었습니다.</p>

<h3>설정</h3>

<pre><code>;; mo-git-blame
(add-to-list 'load-path "~/.emacs.d/vendor/mo-git-blame")
(require 'mo-git-blame)
(global-set-key [?\C-c ?g ?c] 'mo-git-blame-current)
(global-set-key [?\C-c ?g ?f] 'mo-git-blame-file)
</code></pre>

<h3>사용법</h3>

<ul>
<li>파일을 열고 작업을 합니다.</li>
<li>거지같은 코드를 발견합니다.</li>
<li><code>C-c g c</code>(command git current 의 약자인듯..)</li>
<li><p>커맨드를 마구마구 입력하면서 확인합니다.</p>

<pre><code>TAB
l
s
Ctrl + n
Ctrl + n
Ctrl + n
TAB
l
...
</code></pre></li>
<li><p>내가 했던거면 말없이 수정하고, 남이 한거면 <em>Scratch</em> 에 메세지를
남겨두거나 바로 지적질 합니다.(아직 어케 할지 몰겟네요)</p></li>
</ul>


<h2>캡쳐화면</h2>

<p><img src="http://k.minus.com/jwKlv6EpzfEwJ.png">
<img src="http://k.minus.com/jIDbCjAJe4qWD.png">
<img src="http://k.minus.com/jG5TPNm1TKCVP.png"></p>

<h1>결론</h1>

<h1>vim 이 뭐져?</h1>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Termiator]]></title>
    <link href="http://aanoaa.github.io/blog/2011/11/10/termiator/"/>
    <updated>2011-11-10T05:59:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2011/11/10/termiator</id>
    <content type="html"><![CDATA[<p><img src="http://k.minus.com/jO0Dl3TGpMeZW.png"></p>

<p><a href="https://launchpad.net/terminator/+download">terminator</a>를 사용하면 emacs를 쓰지 않고도 하나의 window 내에서 여러개의 terminal 을 사용할 수 있습니다.</p>

<h2>install</h2>

<p>ubuntu:</p>

<pre><code>$ sudo apt-get install terminator
</code></pre>

<p>기본적으로 등록되어 있는 keybinding 은 아래와 같습니다.</p>

<ul>
<li><code>Ctrl + Shift + O</code> 수평분할</li>
<li><code>Ctrl + Shift + E</code> 수직분할</li>
<li><code>Crtl + Shift + Z</code> 최대화 토글</li>
<li><code>Alt + 방향키</code> 이동</li>
</ul>


<p>여러개의 로그를 동시에 볼때 유용합니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Blogging Basics]]></title>
    <link href="http://aanoaa.github.io/blog/2011/10/27/blogging-basics/"/>
    <updated>2011-10-27T04:38:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2011/10/27/blogging-basics</id>
    <content type="html"><![CDATA[<ul>
<li><a href="http://pages.github.com/">http://pages.github.com/</a></li>
<li><a href="http://octopress.org/docs/">http://octopress.org/docs/</a></li>
<li><a href="http://octopress.org/docs/blogging/">http://octopress.org/docs/blogging/</a></li>
<li><a href="http://octopress.org/docs/configuring/">http://octopress.org/docs/configuring/</a></li>
<li><a href="http://octopress.org/docs/deploying/">http://octopress.org/docs/deploying/</a></li>
</ul>


<h3>new post</h3>

<pre><code>rake new_post["Blogging basics"]
</code></pre>

<p><code>source/_posts/YYYY-MM-DD-blogging-basics.markdown</code> 파일이 맨들어짐</p>

<pre><code>---
layout: post
title: "Blogging basics"
date: 2011-10-27 04:38
comments: true
categories: octopress               # 여러개도 가능함   ex: [one, two, three]
published: false                    # optional for draft
author: [Yongbin Yu, Keedi Kim]     # optional for multiple author
---
</code></pre>

<p><code>.markdown</code> 대신에 <code>.html</code> 로도 맨들 수 있음</p>

<h3>generate, preview and deploy</h3>

<pre><code>rake generate
rake watch
rake preview    # http://localhost:4000/
</code></pre>

<p><a href="http://pow.cx/">POW</a> 라는 것도 이용할 수 있는가 보네 멋진뎅</p>

<pre><code>rake deploy
git add .                       # 여기부턴 optional, 하는게 좋겟지
git cm -am "what the commit"
git push origin source
</code></pre>

<p><code>source/_posts/YYYY-MM-DD-blogging-basics.markdown</code> 의 전체 내용</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>layout: post
</span><span class='line'>title: "Blogging basics"
</span><span class='line'>date: 2011-10-27 04:38
</span><span class='line'>comments: true
</span><span class='line'>categories: octopress
</span><span class='line'>---
</span><span class='line'>
</span><span class='line'>- [http://octopress.org/docs/](http://octopress.org/docs/)
</span><span class='line'>- [http://octopress.org/docs/blogging/](http://octopress.org/docs/blogging/)
</span><span class='line'>- [http://octopress.org/docs/configuring/](http://octopress.org/docs/configuring/)
</span><span class='line'>- [http://octopress.org/docs/deploying/](http://octopress.org/docs/deploying/)
</span><span class='line'>
</span><span class='line'>### new post
</span><span class='line'>
</span><span class='line'>    rake new_post["Blogging basics"]
</span><span class='line'>
</span><span class='line'>`source/_posts/YYYY-MM-DD-blogging-basics.markdown` 파일이 맨들어짐
</span><span class='line'>
</span><span class='line'>    ---
</span><span class='line'>    layout: post
</span><span class='line'>    title: "Blogging basics"
</span><span class='line'>    date: 2011-10-27 04:38
</span><span class='line'>    comments: true
</span><span class='line'>    categories: octopress               # 여러개도 가능함   ex: [one, two, three]
</span><span class='line'>    published: false                    # optional for draft
</span><span class='line'>    author: [Yongbin Yu, Keedi Kim]     # optional for multiple author
</span><span class='line'>    ---
</span><span class='line'>
</span><span class='line'>`.markdown` 대신에 `.html` 로도 맨들 수 있음
</span><span class='line'>
</span><span class='line'>### generate, preview and deploy
</span><span class='line'>
</span><span class='line'>    rake generate
</span><span class='line'>    rake watch
</span><span class='line'>    rake preview    # http://localhost:4000/
</span><span class='line'>
</span><span class='line'>[POW](http://pow.cx/) 라는 것도 이용할 수 있는가 보네 멋진뎅
</span><span class='line'>
</span><span class='line'>    rake deploy
</span><span class='line'>    git add .                       # 여기부턴 optional, 하는게 좋겟지
</span><span class='line'>    git cm -am "what the commit"
</span><span class='line'>    git push origin source</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://aanoaa.github.io/blog/2011/10/27/hello-world/"/>
    <updated>2011-10-27T04:16:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2011/10/27/hello-world</id>
    <content type="html"><![CDATA[<h1>hello world</h1>

<blockquote><p>hello world</p></blockquote>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/env perl</span>
</span><span class='line'><span class="k">print</span> <span class="s">&quot;hello world\n&quot;</span><span class="p">;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
