<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Mustache :{]]></title>
  <link href="http://aanoaa.github.io/atom.xml" rel="self"/>
  <link href="http://aanoaa.github.io/"/>
  <updated>2017-05-12T19:30:22+09:00</updated>
  <id>http://aanoaa.github.io/</id>
  <author>
    <name><![CDATA[Hyungsuk Hong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git 데이터 복구]]></title>
    <link href="http://aanoaa.github.io/blog/2017/05/12/git-deiteo-boggu/"/>
    <updated>2017-05-12T19:12:13+09:00</updated>
    <id>http://aanoaa.github.io/blog/2017/05/12/git-deiteo-boggu</id>
    <content type="html"><![CDATA[<p>오늘 실수로 고객의 한달간의 데이터를 잃어버렸습니다.</p>

<p>고객의 데이터를 git 으로 관리하는 프로젝트가 있는데,
지난 한달간의 unstaging 되어 있는 고객의 데이터를</p>

<pre><code>$ git add .
$ git commit -m 'sync'
$ git push
</code></pre>

<p>이런식으로 저장했습니다.
이후에 우리 말썽꾸러기가 이상하게 작업해놓은 이력을 발견하고 업무 쓰로잉 욕구가 생겨서,</p>

<pre><code># 아 짱나넴 걍 원래대로 해놓고 알아서 하라고 해야겠다.
$ git reset --hard HEAD^
$ git push
$ git push -f origin &lt;current-branch&gt;
</code></pre>

<p>를 했습니다.
이때에 방금 커밋한 이력을 날렸습니다.</p>

<p>순간, <strong>아아아아 받은 돈 토해내고 마포대교 가야겠다</strong> 라는 생각이 들었습니다.</p>

<p>하지만 곧 pointer 만 잃고 objects 는 그대로 있을 것 같아서 검색했습니다.</p>

<p><a href="http://stackoverflow.com/questions/5788037/recover-from-git-reset-hard">http://stackoverflow.com/questions/5788037/recover-from-git-reset-hard</a></p>

<pre><code>$ git reflog show
d5d92ec HEAD@{0}: reset: moving to HEAD^
3adf160 HEAD@{1}: commit: sync
...
</code></pre>

<p>이런 이력이 있어서,</p>

<pre><code>$ git show 3adf160
</code></pre>

<p>으로 커밋내용이랑 시간을 확인하고,</p>

<pre><code>git reset --hard 3adf160
</code></pre>

<p>해서 복구 했습니다.
뒤지는 줄 알았습니다.</p>

<p>웃겼던 것은 저 위에 스택오버플로 코멘트였습니다.</p>

<blockquote><p>This trick saved my life a couple of times.</p>

<p>saved me just now! :D</p>

<p>You saved me. Thanks a ton.</p>

<p>saved me too - perfect</p></blockquote>

<h2>See also</h2>

<ul>
<li><a href="https://git-scm.com/book/ko/v1/Git%EC%9D%98-%EB%82%B4%EB%B6%80-%EC%9A%B4%EC%98%81-%EB%B0%8F-%EB%8D%B0%EC%9D%B4%ED%84%B0-%EB%B3%B5%EA%B5%AC">Git의 내부 - 운영 및 데이터 복구</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Firefox CSP Problem at Github]]></title>
    <link href="http://aanoaa.github.io/blog/2017/05/09/firefox-csp-problem-at-github/"/>
    <updated>2017-05-09T11:20:30+09:00</updated>
    <id>http://aanoaa.github.io/blog/2017/05/09/firefox-csp-problem-at-github</id>
    <content type="html"><![CDATA[<p>제가 쓰는 브라우저는 <a href="https://www.mozilla.org/ko/firefox/new/">firefox</a> 이고
주업무의 이슈트래킹은 <a href="https://github.com">github</a> 에서 하고 있습니다.
거의 모든 편집은 emacs 에서 하고요.(지금도 emacs 에서 편집하고 있습니다.)</p>

<p>셋중 하나만 안되도 뭘 못합니다.</p>

<p>작년인가부터 Debian 에서 iceweasel 대신에 firefox 를 지원해주기 시작해서 데비안 패키지
firefox 를 사용하고 있습니다.(<code>firefox ESR 45.9.0</code>)</p>

<p>그런데 오늘(2017-05-09 투표날) github project 도 안보이고 assignee 도 지정할 수 없고
comment 에 사진도 업로드가 아니되는 것 입니다.</p>

<p><img src="http://aanoaa.github.io/images/posts/firefox-csp-at-github.png"></p>

<p>크롬이나 다른 브라우저 쓰면 되긴 하지만, 여러 플러그인 설정과</p>

<ul>
<li><a href="https://addons.mozilla.org/en-US/firefox/addon/vimfx/">vimfx</a></li>
<li><a href="https://addons.mozilla.org/en-US/firefox/addon/markdown-here/">markdown-here</a></li>
<li>send to kindle</li>
<li>uBlock</li>
<li>awesome screenshot</li>
</ul>


<p>북마크등을 옮기려고 생각하면 아찔합니다.</p>

<p>괴롭다..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tekken Premier League 2017]]></title>
    <link href="http://aanoaa.github.io/blog/2017/04/28/tekken-premier-league-2017/"/>
    <updated>2017-04-28T00:42:49+09:00</updated>
    <id>http://aanoaa.github.io/blog/2017/04/28/tekken-premier-league-2017</id>
    <content type="html"><![CDATA[<div class="embed-video-container"><iframe src="//www.youtube.com/embed/MIPBW8BbknI" allowfullscreen></iframe></div>


<p>철권은 조빱이지만 철권 방송은 재밌게 보고 있습니다.</p>

<p>오랜만에 철권대회 입니다.</p>

<p>1등 상금이 60만원? 입니다.</p>

<p>나중에 1,000만원으로 오른다고 하는데 비인기 종목은 e스포츠에서도 서러운 것 같습니다.</p>

<p>오랜만의 철권대회라서 반갑긴한데 해설이 hols(나겜사장) 입니다.
철권의 ㅊ도 모르는 사람이 해설해서 많이 별로 입니다.</p>

<p>무릎 출전 안했으니까 지난번 오락실 매치처럼 인드라+무릎 시키면 좋을 것 같은데 역시
게임방송도 돈이 문제인 것 같습니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[수영 2km]]></title>
    <link href="http://aanoaa.github.io/blog/2017/04/27/suyeong-2km/"/>
    <updated>2017-04-27T23:57:48+09:00</updated>
    <id>http://aanoaa.github.io/blog/2017/04/27/suyeong-2km</id>
    <content type="html"><![CDATA[<p>간만에 블로그 쓴다고 늦게 자서 늦게 인나고 늦게 출근했습니다.
도착하니 점심시간이었습니다.</p>

<p>보통은 민들레에서 백반 먹는데, 어제 중길씨가 국밥 좋아한다고 해서 둘이 고흥순대국 다녀왔습니다.</p>

<p><img src="http://aanoaa.github.io/images/posts/민들레쿠폰.jpg" width="300"></p>

<p>민들레는 제가 가장 좋아하는 식당입니다.</p>

<p>밥먹고 일했습니다. 요새는 딴짓도 잘 안하고 일만하는 것 같습니다.
하루종일 컴피터 앞에 앉아 있는데 하루종일 바쁜 것 같습니다. 담배도 안피니까 화장실 가는거
말고는 계속 컴피터 합니다.</p>

<p>집중을 오래하다보면 무기력해지곤 합니다. 딴짓을 섞어줘야 하는데 얹혀지내기 시작한 이후로는
벽을 바라보고 앉기 때문에 남들이 제 모니터를 볼까봐 딴짓을 못합니다.</p>

<p><img src="http://aanoaa.github.io/images/posts/github액자.jpg" width="300"></p>

<p>열린옷장의 대여비를 %로 할인해주는 쿠폰시스템을 만드는 중 입니다.
한벌대여쿠폰, 10,000원 쿠폰 이런게 있었는데 이번에 요구가 있어서 합니다.
점점 복잡해져서 걱정입니다. &ldquo;%할인 못한다&rdquo; 라고 하고 시스템을 되도록 단순하게 유지하고
싶은데 결정은 제가 하는게 아닙니다.</p>

<p>하다가 피곤해져서 농땡이 좀 부리다가 수영장 갔습니다. 화장실에 휴지가 없었는데 모르는
사람의 도움으로 위기를 벗어났습니다.</p>

<p>4월의 마지막주 목요일이라서 자유수영하는 날 입니다.
이런 날은 아름사마(에이스)가 프로그램을 계획해서 옵니다.</p>

<p>요새 몸이 안좋은지 탕에서 나오거나 체조할때 어질어질합니다.
쉬엄쉬엄 하고 싶은데 같이 수영하시는 분들이 그렇게 못하게 합니다.(앞에 서라고 부추김)</p>

<p>오늘은 2km 수영했습니다.</p>

<p>끝</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[요즘 하는 일]]></title>
    <link href="http://aanoaa.github.io/blog/2017/04/26/yojeum-haneun-il/"/>
    <updated>2017-04-26T23:37:35+09:00</updated>
    <id>http://aanoaa.github.io/blog/2017/04/26/yojeum-haneun-il</id>
    <content type="html"><![CDATA[<p>요즘이랄까 제작년부터 거의 <a href="https://www.theopencloset.net/">열린옷장</a>의 서비스를 만들고
있습니다.</p>

<p>어떤거냐면,</p>

<ul>
<li><a href="https://visit.theopencloset.net/visit">방문예약 서비스</a></li>
<li><a href="https://staff.theopencloset.net/">재고관리 서비스</a></li>
<li><a href="https://donation.theopencloset.net/">의류 기증 신청 및 관리 서비스</a></li>
<li><a href="https://volunteer.theopencloset.net/">봉사활동 신청 및 관리 서비스</a></li>
<li><a href="https://monitor.theopencloset.net/">대기자 현황 서비스</a></li>
<li><a href="https://share.theopencloset.net/">온라인 대여 서비스</a></li>
</ul>


<p>등을 만들고 있습니다.</p>

<p>제가 하는 작업의
이력은
<a href="https://github.com/opencloset/opencloset/issues?q=assignee%3Aaanoaa+is%3Aopen">opencloset/opencloset assignee:aanoaa is:open</a> 에서
볼 수 있습니다.</p>

<p><img src="http://aanoaa.github.io/images/posts/assignee-aanoaa.png"></p>

<p>열린옷장 직원은 아닙니다. 열린옷장 옆사무실에 SILEX 라는 소프트웨어 회사 댕기고
있는데(이번에 건물에서 쫓겨나서 옆사무실 아님) 초창기에 열린옷장 재고관리 라는 작은
프로젝트를 계기로 일하게 되었는데 어쩌다보니 이것만 하고 있습니다.</p>

<hr />

<p>SILEX 에는 yongbin, keedi, aanoaa(나) 세명인데, 얼마전 건물에서 쫓겨나서 망한느낌이 물씬
납니다. 한명은 집에서 애보고 한명은 알바하고 저는 그냥 하던거 계속 하고 있습니다. 저는
열린옷장에 책상 한자리 부탁해서 얹혀 살고 있습니다.</p>

<p>모두들 고생하고 있는데 잘되면 좋겠습니다.</p>

<p>끗</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[인상적인 블로그]]></title>
    <link href="http://aanoaa.github.io/blog/2017/04/26/insangjeogin-beulrogeu/"/>
    <updated>2017-04-26T23:17:44+09:00</updated>
    <id>http://aanoaa.github.io/blog/2017/04/26/insangjeogin-beulrogeu</id>
    <content type="html"><![CDATA[<p>요즘 재미있게 보는 블로그가 있습니다.</p>

<p><a href="http://blog.naver.com/ccgoodjob">조광사진관 일기장</a></p>

<p>별거 없는 얘기인데 좋습니다.
저도 비슷한 컨셉으로 적당적당 있었던 일들이나 생각을 올려볼까 합니다.
귀찮아져서 금방 안하게 되겠지만..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[한글이 되는가]]></title>
    <link href="http://aanoaa.github.io/blog/2017/04/26/hangeuli-doeneunga/"/>
    <updated>2017-04-26T22:46:10+09:00</updated>
    <id>http://aanoaa.github.io/blog/2017/04/26/hangeuli-doeneunga</id>
    <content type="html"><![CDATA[<p>octopress 에서는 한글 tags 와 한글제목을 지원하는가 궁금했습니다.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle exec rake new_post['한글이 되는가']
</span><span class='line'>mkdir -p source/_posts
</span><span class='line'>Creating new post: source/_posts/2017-04-26-hangeuli-doeneunga.markdown</span></code></pre></td></tr></table></div></figure>


<p>이렇게 됩니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Yongbin-mode]]></title>
    <link href="http://aanoaa.github.io/blog/2016/06/08/yongbin-mode/"/>
    <updated>2016-06-08T00:22:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2016/06/08/yongbin-mode</id>
    <content type="html"><![CDATA[<h2>외래어의 한글표기</h2>

<p>보통 외래서를 한글로 적을때, <code>e</code> 는 <code>ㅔ</code> 로, <code>a</code> 또는 <code>ae</code> 는 <code>ㅐ</code> 로
적습니다.</p>

<p>그런데 <a href="https://twitter.com/yongbin">@yongbin</a>님은 바꿔씁니다.
<code>helper</code> 를 한글로 적으면 보통은 <code>헬퍼</code>이지만 @yongbin 님은 <code>핼퍼</code>
입니다. 오래된 이야기입니다.</p>

<p>디랙토리, 핼퍼, 렌덤 등등..</p>

<p><code>생일</code>도 <code>셍일</code>로 적고, <code>요새</code>도 <code>요세</code> 적는걸 보면, 외래어만 그런 것 같진 않습니다.</p>

<h2>*-mode</h2>

<p>제 작은소원은 조국의 통일도 편경장의 팔모가지도 아닙니다.
제가 필요한 emacs의 mode 를 만드는 것입니다.
elisp 관련 책도 읽다가 포기한 적도 많습니다.</p>

<p>그런데 몇일 전
<a href="https://github.com/opencloset/monitor/issues/94#issuecomment-223536395">github-comment</a> 에서</p>

<blockquote><p>핼퍼에 구현된 코드중에</p></blockquote>

<p>라는 코멘트가 결정적인 계기가 되어서 <code>yongbin-mode</code> 를 만들어보자 라고
결심하게 되었습니다.</p>

<h3>yongbin-mode</h3>

<p>아이디어는 이랬습니다.</p>

<p>emacs 내에서 <code>ㅔ</code> 를 누르면 <code>ㅐ</code> 가 입력되고 <code>ㅐ</code>를 누르면 <code>ㅔ</code>가
입력되도록 하자.</p>

<p><code>pre-command-hook</code> 에서 스슥 하면 될 것 같았는데, multibyte 입력은
이벤트가 발생되지 않았습니다.</p>

<p>(아직도 왜 그런지 모르겠고, 어디서 무얼 찾아야 하는지도
모르겠습니다. elisp 도사님 찾아가서 제자 하고 싶음)</p>

<p>여튼 꼼수를 써서 익숙한 perl 로 프로그램을 만들고 emacs 에서는 호출만
하자 싶었습니다.</p>

<p>해서 <code>yb</code> 라는 perl 스크립트를 만들어서 <code>ㅐ</code>와 <code>ㅔ</code> 를 바꾸도록
하였습니다.</p>

<pre><code>$ echo "안녕하세요" | yb
안녕하새요
</code></pre>

<p>그리고 <code>yongbin-mode</code> 라는 minor mode 를 만들어서 채팅할때 알아서
변환되게 하고 싶었습니다.(저는 irc 채팅을 emacs 에서 합니다)</p>

<p>아무것도 몰라서(지금도 모름) 구글링하고 문서읽고 다른 코드들을 참고하면서</p>

<ul>
<li>yongbin-mode : 마이너 모드(yongbin-mode)를 켜고끈다</li>
<li>yongbinize-buffer : 현재버퍼의 텍스트를 용빈화시킨다</li>
<li>yongbinize-region(start, end) : 영역의 텍스트를 용빈화시킨다</li>
<li>yongbinize-line : 현재 라인을 용빈화 시킨다</li>
<li>erc-yongbinize : irc 의 입력을 용빈화 시킨다</li>
</ul>


<p>기능을 맨들었습니다.</p>

<p>그걸 여차저차 해서 irc 에서</p>

<pre><code>&lt;aanoaa&gt; '-']/ 안녕하세요&lt;RET&gt;
</code></pre>

<p>하면,</p>

<pre><code>&lt;aanoaa&gt; '-']/ 안녕하새요
</code></pre>

<p>로 됩니다.</p>

<p><a href="https://github.com/aanoaa/yongbin-mode">https://github.com/aanoaa/yongbin-mode</a></p>

<h2>느낀점</h2>

<p>개발환경이 넘 구립니다. 코드 변경하고 <code>M-x eval-buffer</code> 해서 다시 컴파일
하고 어디어디 찾아가서 <code>C-x C-e</code> 해서 한줄만 실행하고 등등..</p>

<p>뭘 모르는데 뭘 어떻게 해야할지가 젤 어렵고,
또 어떻게 디버깅 해야 할지가 어렵습니다.
괄호가 넘 많고 <code>if else</code> 문에 대한 문서를 봐도 어케 쓰는지 모르겠능;;
한글처리에 관한 문서는??</p>

<p>등등 어려움이 넘 많습니다.</p>

<p>하지만 context 가 오묘하달까?</p>

<pre><code>(with-current-buffer yongbinize-buffer-name
  (goto-char (point-min))
  (setq yongbinized-text (...)))
</code></pre>

<p>이런거?</p>

<p><code>point-min</code> 이라는걸 buffer 마다 가지고 있는 모양인데, 그게 context 에 따라
선택된다는게 참 신통방통</p>

<p>perl 뉴비 시절에 perl-kr 커뮤니티에서 도움을 많이 받았던게 넘 좋았는데,
elisp 는 한국사용자 커뮤니티가 없는 것 같습니다(?)
한글문서도 오래되었거나 거의 없는 것 같고..
closure 는 있는데 이건 elisp 가 아니고..</p>

<p>elisp 에 관심있는 emacs 사용자들에게서 뭔가 도움을 구해보고 싶습니다.
관련된 커뮤니티를 알고 계시면 알려주세요.</p>

<h2>레알 결론</h2>

<p><code>ㅔ</code> 와 <code>ㅐ</code> 가 바뀐게 보이면 너무 꼴보기 싫었습니다.
이제 몇주동안 저도 똑같이 바꿔쓰면서 고통을 주도록 하겠습니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redis Path and Db Number]]></title>
    <link href="http://aanoaa.github.io/blog/2015/07/15/redis-path-and-db-number/"/>
    <updated>2015-07-15T18:10:25+09:00</updated>
    <id>http://aanoaa.github.io/blog/2015/07/15/redis-path-and-db-number</id>
    <content type="html"><![CDATA[<p><code>redis://localhost:6397/1</code> 흔한 redis-url 입니다.
<code>/1</code> 의 역할은 뭘까요? 뭐냐면 Database number 입니다.</p>

<pre><code>$ redis-cli --help
redis-cli 3.0.2

Usage: redis-cli [OPTIONS] [cmd [arg [arg ...]]]
  ...
  -n &lt;db&gt;            Database number.
  ...
</code></pre>

<p><code>/1</code> 없이 연결하면 기본으로 <code>0</code> 번 database 를 사용합니다.</p>

<p>디버그 하면서 값을 확인하려고 제아무리 <code>keys *</code> 을 찍어도 암것도
안나와서 넘 답답했는데..</p>

<pre><code>127.0.0.1:6379&gt; keys *
(empty list or set)
</code></pre>

<p><code>select</code> 명령으로 선택해주거나,</p>

<pre><code>127.0.0.1:6379&gt; select 1
OK
127.0.0.1:6379[1]&gt; keys *
1) "user:aanoaa"
2) "users"
</code></pre>

<p><code>redis-cli</code> 에서 <code>-n</code> 옵션을 사용하거나</p>

<pre><code>$ redis-cli -n 1
127.0.0.1:6379[1]&gt; 
</code></pre>

<p>redis-url path 로 졸 검색했는데 암것도 안나옴.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Perltidy Profile Option]]></title>
    <link href="http://aanoaa.github.io/blog/2015/07/15/perltidy-profile-option/"/>
    <updated>2015-07-15T16:31:41+09:00</updated>
    <id>http://aanoaa.github.io/blog/2015/07/15/perltidy-profile-option</id>
    <content type="html"><![CDATA[<pre><code>$ perldoc perltidy

...
-pro=filename or --profile=filename
    To simplify testing and switching .perltidyrc files, this command
    may be used to specify a configuration file which will override the
    default name of .perltidyrc. There must not be a space on either
    side of the '=' sign. For example, the line

       perltidy -pro=testcfg

    would cause file testcfg to be used instead of the default
    .perltidyrc.

    A pathname begins with three dots, e.g. ".../.perltidyrc", indicates
    that the file should be searched for starting in the current
    directory and working upwards. This makes it easier to have multiple
    projects each with their own .perltidyrc in their root directories.
...
</code></pre>

<p>여기서 중요한것은 <code>...</code> 으로 시작하면 현재 디렉토리에서부터 위로
올라가면서 이름으로 프로파일을 찾는다는 것</p>

<p>global 설정은 <code>$HOME/.perltidyrc</code> 로 두고 각 프로젝트 root 마다
<code>.perltidyrc</code> 파일을 두면 신경쓰지 않고 사용할 수 있다는 겁니다.</p>

<p>굳</p>

<p>alias 걸어두고 사용하면 편리하겠습니다.
emacs 를 사용하는 인간이라면 <code>perltidy-mode</code> 의 <code>perltidy-bin</code> 을
수정해주면 되겠습니다.</p>

<p>선조들은 훌륭합니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress 3.0]]></title>
    <link href="http://aanoaa.github.io/blog/2015/07/14/octopress-3-dot-0/"/>
    <updated>2015-07-14T15:51:02+09:00</updated>
    <id>http://aanoaa.github.io/blog/2015/07/14/octopress-3-dot-0</id>
    <content type="html"><![CDATA[<p>블로그에 글을 1년 넘게 안썻더니 어케 쓰는줄 모르겠음.
하는김에 octopress 도 업그레이드</p>

<p>이제 <code>gh-pages</code> 브랜치 아니어도 되는건가..</p>

<p>아 몰랑</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keep Simple dist.ini]]></title>
    <link href="http://aanoaa.github.io/blog/2014/02/12/keep-simple-dist-dot-ini/"/>
    <updated>2014-02-12T17:20:06+09:00</updated>
    <id>http://aanoaa.github.io/blog/2014/02/12/keep-simple-dist-dot-ini</id>
    <content type="html"><![CDATA[<p><a href="http://search.cpan.org/~rjbs/Dist-Zilla/lib/Dist/Zilla.pm">Dist::Zilla</a>
는 매우 편리한 배포도구 입니다.</p>

<p>기능이 넘 많아서 잘 모르고 써왔는데, 이게 뭔지도 모르는걸 쓰다보니
헛갈려서 요새는 레알 간단하게만 쓰고 있습니다.</p>

<p>갠적으로 딱 필요한 메타파일은 이거 3개 입니다.</p>

<ul>
<li>dist.ini</li>
<li>MANIFEST.SKIP</li>
<li>cpanfile</li>
</ul>


<p><code>cpanfile</code> 이 없을적에는 <code>Makefile.PL</code> 로 부터 의존성문제를 해결했기
때문에 복잡했는데 이제는 <code>cpanm --installdeps .</code> 덕분에 몹.시.편.리.</p>

<p>배포할때 빼고 싶은 파일은 <code>MANIFEST.SKIP</code> 에 적어주고, <code>dist.ini</code> 로
build 하고 배포</p>

<p>좋은 플러그인이 많은데 나중되면 어케 쓰는지도 몰겟고 의존성문제로 인해
불편하기도 해서 그냥 자잘구레한 작업은 직접 손으로 하는걸로..</p>

<p><code>dist.ini</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="na">name</span> <span class="o">=</span> <span class="s">mymodule</span>
</span><span class='line'><span class="na">abstract</span> <span class="o">=</span> <span class="s">wat</span>
</span><span class='line'><span class="na">author</span> <span class="o">=</span> <span class="s">aanoaa &lt;wat@wat.wat&gt;</span>
</span><span class='line'><span class="na">license</span> <span class="o">=</span> <span class="s">Perl_5</span>
</span><span class='line'><span class="na">copyright_holder</span> <span class="o">=</span> <span class="s">aanoaa</span>
</span><span class='line'><span class="na">copyright_year</span> <span class="o">=</span> <span class="s">2014</span>
</span><span class='line'><span class="na">version</span> <span class="o">=</span> <span class="s">v0.0.1</span>
</span><span class='line'><span class="k">[@Basic]</span>
</span><span class='line'><span class="k">[PkgVersion]</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>MANIFEST.SKIP</code></p>

<pre><code># Makemaker generated files and dirs.
^MANIFEST\.
^Makefile$
^blib/

# version-control
^.git/
^.gitignore

^dist.ini
^README.md
</code></pre>

<p>이렇게 쓰고 있습니다.
제일 간단한 설정이라고 생각합니다.</p>

<p>전에는 dzil profile 같은 것도 만들고 그랬는데 이제는 그냥 예전거
복사해다 쓰고 그럽니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shut the Fuck Up and Perltidy]]></title>
    <link href="http://aanoaa.github.io/blog/2014/02/12/shut-the-fuck-up-and-perltidy/"/>
    <updated>2014-02-12T17:07:08+09:00</updated>
    <id>http://aanoaa.github.io/blog/2014/02/12/shut-the-fuck-up-and-perltidy</id>
    <content type="html"><![CDATA[<p><code>$HOME/.perltidyrc</code></p>

<pre><code># https://github.com/kraih/mojo/blob/master/.perltidyrc
-pbp # Start with Perl Best Practices
-w # Show all warnings
-iob # Ignore old breakpoints
-l=79 # 79 characters per line
-mbl=2 # No more than 2 blank lines
-i=4 # Indentation is 4 columns
-ci=2 # Continuation indentation is 2 columns
-vt=0 # Less vertical tightness
-pt=2 # High parenthesis tightness
-bt=2 # High brace tightness
-sbt=2 # High square bracket tightness
-isbc # Don't indent comments without leading space
</code></pre>

<p>여기에 emacs 에다가
<a href="http://search.cpan.org/~jjore/perltidy-mode/">perltidy-mode.el</a> load
하고</p>

<pre><code>(eval-after-load "cperl-mode"
  '(add-hook 'cperl-mode-hook 'perltidy-mode))
</code></pre>

<p>하고 저장하면 저장할때마다 알아서 <code>perltidy</code> 되기 땜시 굳입니다
팀에서 통일해서 쓰면 좋겟습니다.</p>

<h3>SEE ALSO</h3>

<p><a href="http://aanoaa.github.io/blog/2012/09/12/tidyall/">tidyall</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Private Git Repo With Dropbox]]></title>
    <link href="http://aanoaa.github.io/blog/2013/12/23/private-git-repo-with-dropbox/"/>
    <updated>2013-12-23T18:18:35+09:00</updated>
    <id>http://aanoaa.github.io/blog/2013/12/23/private-git-repo-with-dropbox</id>
    <content type="html"><![CDATA[<p>개인적인 private repo 는 bitbucket 을 사용하고 있었는데, 아래 링크를
보고 Dropbox 를 사용하고 있습니다.</p>

<p><a href="http://mrdanadams.com/2011/github-free-private-git-repositories-dropbox/">Forget github limits: Free private git repositories with Dropbox</a></p>

<p>근데 아쉬운거는 github repo 에는 issue board 도 있어서 프로젝트별로
할일을 관리할 수 있어서 참 좋은데 그런 기능이 필요했습니다.</p>

<p>해서 둘러보던 차에 <a href="http://todotxt.com/">Todo.txt</a> CLI 를 사용해보고
있습니다.</p>

<pre><code># todo.cfg
export TODO_DIR=$HOME/Dropbox/todo/`basename $PWD`
alias t=todo.sh
</code></pre>

<p>요래해서 사용중입니다.</p>

<p>프로젝트 root 에서 밖에 사용못하고 이름 중복에 대응할 순 없지만 아주
만족합니다.</p>

<p><code>Dropbox</code>++, <code>Todo.txt</code>++</p>

<pre><code>$ cd ~/Desktop/t
$ t add '요래 조래'
1 요래 조래
TODO: 1 added.
~/Desktop/t $ t add '이러쿵 저러쿵'
2 이러쿵 저러쿵
TODO: 2 added.
~/Desktop/t $ t add '어쩌고 저쩌고'
3 어쩌고 저쩌고
TODO: 3 added.
~/Desktop/t $ t ls
3 어쩌고 저쩌고
1 요래 조래
2 이러쿵 저러쿵
--
TODO: 3 of 3 tasks shown
~/Desktop/t $ t do 3
3 x 2013-12-23 어쩌고 저쩌고
TODO: 3 marked as done.
x 2013-12-23 어쩌고 저쩌고
TODO: /home/hshong/Dropbox/todo/t/todo.txt archived.
~/Desktop/t $ t ls
1 요래 조래
2 이러쿵 저러쿵
--
TODO: 2 of 2 tasks shown
</code></pre>

<p>뭐 대략 이런느낌</p>

<p>Dropbox 에서 동기화 되기 땜시 다른 PC 로 옮겨서도 같은 프로젝트에서
같은 TODO list 를 관리할 수 있다는게 좋은 것 같습니다.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Coffeescript-compile-args]]></title>
    <link href="http://aanoaa.github.io/blog/2013/12/20/coffeescript-compile-args/"/>
    <updated>2013-12-20T00:34:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2013/12/20/coffeescript-compile-args</id>
    <content type="html"><![CDATA[<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ coffee -h
</span><span class='line'>
</span><span class='line'>Usage: coffee [options] path/to/script.coffee -- [args]
</span><span class='line'>
</span><span class='line'>If called without options, `coffee` will run your script.
</span><span class='line'>
</span><span class='line'>  -b, --bare         compile without a top-level function wrapper
</span><span class='line'>  -c, --compile      compile to JavaScript and save as .js files
</span><span class='line'>  -e, --eval         pass a string from the command line as input
</span><span class='line'>  -h, --help         display this help message
</span><span class='line'>  -i, --interactive  run an interactive CoffeeScript REPL
</span><span class='line'>  -j, --join         concatenate the source CoffeeScript before compiling
</span><span class='line'>  -m, --map          generate source map and save as .map files
</span><span class='line'>  -n, --nodes        print out the parse tree that the parser produces
</span><span class='line'>      --nodejs       pass options directly to the "node" binary
</span><span class='line'>  -o, --output       set the output directory for compiled JavaScript
</span><span class='line'>  -p, --print        print out the compiled JavaScript
</span><span class='line'>  -s, --stdio        listen for and compile scripts over stdio
</span><span class='line'>  -l, --literate     treat stdio as literate style coffee-script
</span><span class='line'>  -t, --tokens       print out the tokens that the lexer/rewriter produce
</span><span class='line'>  -v, --version      display the version number
</span><span class='line'>  -w, --watch        watch scripts for changes and rerun commands</span></code></pre></td></tr></table></div></figure>


<p>javascript 는 html 의 script 로써만 사용하고 있습니다.
직접 사용하진 않고 <a href="http://coffeescript.org/">CoffeeScript</a> 를 쓰고
있습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">$</span> <span class="nx">coffee</span> <span class="o">-</span><span class="nx">cps</span>
</span><span class='line'><span class="nx">$</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&#39;oops&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">Ctrl</span><span class="o">+</span><span class="nx">d</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">//</span> <span class="nx">Generated</span> <span class="k">by</span> <span class="nx">CoffeeScript</span> <span class="mf">1.6</span><span class="p">.</span><span class="mi">3</span>
</span><span class='line'><span class="p">(</span><span class="nx">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="nx">$</span><span class="p">(</span><span class="nx">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s">&#39;oops&#39;</span><span class="p">);</span>
</span><span class='line'>  <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="p">}).</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>위 결과처럼 별 옵션없이 <code>--compile</code> 하면</p>

<pre><code>(function() { ... }).call(this)
</code></pre>

<p>무명함수로 감싼뒤에 실행합니다. lexical scope 이 자동으로 적용되어서
훌륭합니다만, 여러개의 파일을 하나의 html 에서 사용하고자 할때는 다른
파일에서 선언한 함수에 접근을 못하는 상황이 발생할 수 있습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;jquery.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;a.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span><span class='line'><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">&quot;b.js&quot;</span><span class="nt">&gt;&lt;/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p><code>a.js</code> 에 <code>foo</code> 라는 함수를 만들어 놓고 <code>b.js</code> 에서 사용하고자 하면
못찾습니다.</p>

<pre><code>ReferenceError: foo is not defined
</code></pre>

<p>이를 해결하는 방법은 3가지가 있습니다. (더 있을 수도..)</p>

<ol>
<li><p>requirejs 같은거 쓴다.</p>

<p><code>define</code>, <code>require</code> 으로 스슥</p></li>
<li><p>Window 이름공간을 더럽힌다.</p>

<p>브라우저의 전역적 이름공간인 <code>Window</code> 의 프로토타입에 함수를
추가해서 사용</p></li>
<li><p>무명함수를 벗긴다.</p>

<p><code>coffee</code> 명령어의 <code>--bare</code> 옵션인데, <code>compile without a top-level
function wrapper</code></p></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="nx">$</span> <span class="nx">coffee</span> <span class="o">-</span><span class="nx">bcps</span>
</span><span class='line'><span class="nx">$</span> <span class="nf">-&gt;</span>
</span><span class='line'>  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span> <span class="s">&#39;oops&#39;</span>
</span><span class='line'><span class="o">&lt;</span><span class="nx">Ctrl</span><span class="o">+</span><span class="nx">d</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">//</span> <span class="nx">Generated</span> <span class="k">by</span> <span class="nx">CoffeeScript</span> <span class="mf">1.6</span><span class="p">.</span><span class="mi">3</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="nx">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="s">&#39;oops&#39;</span><span class="p">);</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>  요래 하는 것입니다.</p>

<hr />

<p>emacs 사용자라면 어찌 매번 컴파일하는 번거로운 작업을 한단 말입니까.
<code>coffee-cos-mode</code>(coffee compile-on-save mode) 에 컴파일 옵션을
수정해둬야 하겠습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='coffeescript'><span class='line'><span class="p">(</span><span class="nx">defun</span> <span class="nx">coffee</span><span class="o">-</span><span class="nx">custom</span> <span class="p">()</span>
</span><span class='line'>  <span class="s">&quot;coffee-mode-hook&quot;</span>
</span><span class='line'>  <span class="p">(</span><span class="nx">set</span> <span class="p">(</span><span class="nx">make</span><span class="o">-</span><span class="nx">local</span><span class="o">-</span><span class="nx">variable</span> <span class="s">&#39;tab-width) 2)</span>
</span><span class='line'><span class="s">  (setq coffee-args-compile &#39;</span><span class="p">(</span><span class="s">&quot;-bc&quot;</span><span class="p">))</span>
</span><span class='line'><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[P5-hubot Onto Heroku]]></title>
    <link href="http://aanoaa.github.io/blog/2013/06/10/p5-hubot-onto-heroku/"/>
    <updated>2013-06-10T17:31:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2013/06/10/p5-hubot-onto-heroku</id>
    <content type="html"><![CDATA[<p>오리지날 <a href="https://github.com/github/hubot">hubot</a> 에는
<a href="https://www.heroku.com/">heroku</a> 어쩌고 저쩌고 하는 기능이 있습니다.</p>

<p>이제 <a href="https://github.com/aanoaa/p5-hubot">p5-hubot</a> 에서도 됩니다.</p>

<h3>OVERVIEW</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cpanm Hubot                      <span class="c"># requires Hubot &gt;= 0.2.0</span>
</span><span class='line'><span class="nv">$ </span>hubot --create /path/to/hubot    <span class="c"># 배치가능한 형태의 패키지 저장소를 생성합니다</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /path/to/hubot
</span><span class='line'><span class="nv">$ </span>git init <span class="p">;</span> git add . <span class="p">;</span> git commit -m <span class="s2">&quot;init commit&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>heroku create --stack cedar --buildpack https://github.com/aanoaa/heroku-buildpack-perl.git
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>heroku config:add <span class="nv">HEROKU_URL</span><span class="o">=</span>http://your-herokuapp.herokuapp.com
</span><span class='line'><span class="nv">$ </span>heroku config:add <span class="nv">HUBOT_IRC_ROOMS</span><span class="o">=</span><span class="s1">&#39;#channel&#39;</span>
</span><span class='line'><span class="nv">$ </span>heroku config:add <span class="nv">HUBOT_IRC_SERVER</span><span class="o">=</span><span class="s1">&#39;irc.freenode.net&#39;</span>
</span><span class='line'>
</span><span class='line'><span class="nv">$ </span>git push heroku master
</span></code></pre></td></tr></table></div></figure>


<p>가장 기본은 이렇습니다만, 확장 스크립트를 추가하시려면
<code>hubot-scripts.json</code> 파일에 적어주시고 그에 따른 모듈 의존성은
<code>cpanfile</code> 에 적어서 해결해야 합니다.</p>

<h3>CREATE A DEPLOYABLE HUBOT</h3>

<p><a href="http://search.cpan.org/">CPAN</a> 을 이용한다면,</p>

<pre><code>$ cpanm Hubot
$ hubot -c ~/Desktop/hubot
</code></pre>

<p>명령어로 deploy 저장소를 만들 수 있습니다.</p>

<pre><code>$ cd ~/Desktop/hubot/
~/Desktop/hubot $ find
.
./.gitignore
./cpanfile
./hubot-scripts.json
./bin
./bin/hubot
./README.md
./lib
./lib/Hubot
./lib/Hubot/EventEmitter.pm
./lib/Hubot/Scripts
./lib/Hubot/Scripts/help.pm
./lib/Hubot/Scripts/ascii.pm
./lib/Hubot/Scripts/shorten.pm
./lib/Hubot/Scripts/tweet.pm
./lib/Hubot/Scripts/roles.pm
./lib/Hubot/Response.pm
./lib/Hubot/Robot.pm
./lib/Hubot/User.pm
./lib/Hubot/Adapter.pm
./lib/Hubot/TextListener.pm
./lib/Hubot/Listener.pm
./lib/Hubot/Adapter
./lib/Hubot/Adapter/Irc.pm
./lib/Hubot/Adapter/Shell.pm
./lib/Hubot/Adapter/Campfire.pm
./lib/Hubot/Message.pm
./lib/Hubot/Brain.pm
./lib/Hubot/Creator.pm
./lib/Hubot.pm
./Procfile
</code></pre>

<p>이 디렉토리를 git 저장소로 만들고요, <code>heroku</code> tool 을 사용해서 heroku
에서 돌아갈 서비스 저장소로 만듭니다.</p>

<p><code>Procfile</code> 은 heroku 에서 사용하는 process 타입별로 실행 명령어를
담고 있는 어쩌고 저쩌고;;
<a href="https://devcenter.heroku.com/articles/procfile">Process Types and the Procfile</a></p>

<p><code>cpanfile</code> 은 모듈의존성을 해결하기 위해 꼭 필요합니다. 그렇지 않으면
아래와 비슷한 오류가 발생되면서 프로그램이 실행되지 않습니다.</p>

<pre><code>Can't locate xxx.pm in @INC (@INC contains: ~~~) at line 1.
</code></pre>

<p>나머지는 p5-hubot core 모듈입니다.(서비스엔 필요없는것도 잇지만..)</p>

<h3>CREATE A HEROKU INSTANCE?</h3>

<pre><code>$ heroku create --stack cedar --buildpack https://github.com/aanoaa/heroku-buildpack-perl.git
</code></pre>

<p><code>heroku</code> 라는 <code>remote</code> 를 등록하고 <code>BUILDPACK_URL</code> 설정변수를 추가하는
것 정도가 아닐까 추측 합니다.</p>

<p>BUILDPACK_URL 은 git 저장소인데,</p>

<ul>
<li><code>bin/detect</code></li>
<li><code>bin/compile</code></li>
<li><code>bin/release</code></li>
</ul>


<p>를 가지고 있습니다. 자세한 내용은
<a href="https://devcenter.heroku.com/articles/buildpacks#creating-a-buildpack">Creating a Buildpack</a>
을 참고하시고, 이부분의 매직은 <code>bin/compile</code> 이 수행될때 <code>cpanm</code> 을
이용해서 <code>./local</code> 에 의존모듈을 설치합니다. 그리고 실행할때에
<code>-Ilocal/perl5/lib</code> <code>PERL5LIB</code> 에 추가합니다. 풀어쓰면 아래와
같습니다.</p>

<pre><code>$ cpanm --quiet --notest -l $BUILD_DIR/local --installdeps .
</code></pre>

<p><a href="https://twitter.com/miyagawa">@miyagawa</a>++ 입니다.</p>

<p>그리고 heroku 에 push 하면 알아서 돌아갑니다(별일 없으면..)</p>

<h3>SEE ALSO</h3>

<ul>
<li><a href="https://github.com/github/hubot/wiki/Deploying-Hubot-onto-Heroku">Deploying Hubot onto Heroku</a></li>
<li><a href="https://github.com/aanoaa/heroku-buildpack-perl">heroku-buildpack-perl for Perl/hubot</a></li>
<li><a href="https://devcenter.heroku.com/articles/procfile">Process Types and the Procfile</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[P5-hubot]]></title>
    <link href="http://aanoaa.github.io/blog/2012/10/04/p5-hubot/"/>
    <updated>2012-10-04T15:30:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/10/04/p5-hubot</id>
    <content type="html"><![CDATA[<h3>p5-hubot scipts explained</h3>

<p>필요해서 <a href="https://github.com/github/hubot">hubot</a> 을 <code>perl</code> 로 옮기고
있습니다. - <a href="https://github.com/aanoaa/p5-hubot">p5-hubot</a></p>

<p>아직 해야할 일이 많지만 테스트 + 문서화를 해서
<a href="http://search.cpan.org/">CPAN</a> 에 올릴 생각입니다.</p>

<p><a href="https://github.com/github/hubot-scripts/graphs/contributors">hubot-scripts contributors</a>
는 100명이 넘습니다.</p>

<p><code>p5-hubot</code> 도 도움을 받아서 멋진 기능을 장착하고 싶습니다.</p>

<p><a href="http://search.cpan.org/">CPAN</a> 에 <code>Hubot::Scripts::*</code> 모듈이
많아지면 좋겠습니다.</p>

<p>robot 에게 <code>http://twitter.com/&lt;username&gt;/status/&lt;tweetid&gt;</code> 의 패턴이
들리면 그 내용을 파싱해서 말하는 스크립트 입니다.</p>

<figure class='code'><figcaption><span>Hubot::Scripts::tweet</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="nb">package</span> <span class="nn">Hubot::Scripts::</span><span class="n">tweet</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">JSON::</span><span class="n">XS</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="k">sub </span><span class="nf">load</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">my</span> <span class="p">(</span> <span class="nv">$class</span><span class="p">,</span> <span class="nv">$robot</span> <span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>    <span class="nv">$robot</span><span class="o">-&gt;</span><span class="n">hear</span><span class="p">(</span>
</span><span class='line'>        <span class="sx">qr/https?:\/</span><span class="o">\</span><span class="sr">/(mobile\.)?twitter\.com\/.*?\/status\/([0-9]+)/i</span><span class="p">,</span>
</span><span class='line'>        <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>            <span class="k">my</span> <span class="nv">$msg</span> <span class="o">=</span> <span class="nb">shift</span><span class="p">;</span>    <span class="c1"># Hubot::Response</span>
</span><span class='line'>            <span class="nv">$msg</span><span class="o">-&gt;</span><span class="n">http</span><span class="p">(</span> <span class="s">&#39;https://api.twitter.com/1/statuses/show/&#39;</span>
</span><span class='line'>                  <span class="o">.</span> <span class="nv">$msg</span><span class="o">-&gt;</span><span class="n">match</span><span class="o">-&gt;</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span>
</span><span class='line'>                  <span class="o">.</span> <span class="s">&#39;.json&#39;</span> <span class="p">)</span><span class="o">-&gt;</span><span class="n">get</span><span class="p">(</span>
</span><span class='line'>                <span class="k">sub </span><span class="p">{</span>
</span><span class='line'>                    <span class="k">my</span> <span class="p">(</span> <span class="nv">$body</span><span class="p">,</span> <span class="nv">$hdr</span> <span class="p">)</span> <span class="o">=</span> <span class="nv">@_</span><span class="p">;</span>
</span><span class='line'>                    <span class="k">return</span> <span class="k">if</span> <span class="p">(</span> <span class="o">!</span><span class="nv">$body</span> <span class="o">||</span> <span class="o">!</span><span class="nv">$hdr</span><span class="o">-&gt;</span><span class="p">{</span><span class="n">Status</span><span class="p">}</span> <span class="o">=~</span><span class="sr"> /^2/</span> <span class="p">);</span>
</span><span class='line'>                    <span class="k">my</span> <span class="nv">$tweet</span> <span class="o">=</span> <span class="n">decode_json</span><span class="p">(</span><span class="nv">$body</span><span class="p">);</span>
</span><span class='line'>                    <span class="nv">$msg</span><span class="o">-&gt;</span><span class="nb">send</span><span class="p">(</span><span class="s">&quot;$tweet-&gt;{user}{screen_name}: $tweet-&gt;{text}&quot;</span><span class="p">);</span>
</span><span class='line'>                <span class="p">}</span>
</span><span class='line'>                  <span class="p">);</span>
</span><span class='line'>            <span class="nv">$msg</span><span class="o">-&gt;</span><span class="n">message</span><span class="o">-&gt;</span><span class="n">finish</span><span class="p">;</span>
</span><span class='line'>        <span class="p">}</span>
</span><span class='line'>    <span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="mi">1</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">=head1 SYNOPSIS</span>
</span><span class='line'>
</span><span class='line'><span class="cm">http://twitter.com/&lt;username&gt;/status/&lt;tweetid&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="cm">=head1 DEPENDENCIES</span>
</span><span class='line'>
</span><span class='line'><span class="cm">None</span>
</span><span class='line'>
</span><span class='line'><span class="cm">=head1 CONFIGURATION</span>
</span><span class='line'>
</span><span class='line'><span class="cm">None</span>
</span><span class='line'>
</span><span class='line'><span class="cm">=head1 AUTHOR</span>
</span><span class='line'>
</span><span class='line'><span class="cm">Hyungsuk Hong</span>
</span><span class='line'>
</span><span class='line'><span class="cm">=cut</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>tweet.coffee</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='coffee-script'><span class='line'><span class="c1"># Description:</span>
</span><span class='line'><span class="c1">#   Detect tweet URL and send tweet content</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Dependencies:</span>
</span><span class='line'><span class="c1">#   None</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Configuration:</span>
</span><span class='line'><span class="c1">#   None</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Commands:</span>
</span><span class='line'><span class="c1">#</span>
</span><span class='line'><span class="c1"># Author:</span>
</span><span class='line'><span class="c1">#   Vrtak-CZ</span>
</span><span class='line'>
</span><span class='line'><span class="nv">module.exports = </span><span class="nf">(robot) -&gt;</span>
</span><span class='line'>  <span class="nx">robot</span><span class="p">.</span><span class="nx">hear</span> <span class="sr">/https?:\/\/(mobile\.)?twitter\.com\/.*?\/status\/([0-9]+)/i</span><span class="p">,</span> <span class="nf">(msg) -&gt;</span>
</span><span class='line'>      <span class="nx">msg</span><span class="p">.</span><span class="nx">http</span><span class="p">(</span><span class="s">&quot;https://api.twitter.com/1/statuses/show/</span><span class="si">#{</span><span class="nx">msg</span><span class="p">.</span><span class="nx">match</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="si">}</span><span class="s">.json&quot;</span><span class="p">).</span><span class="nx">get</span><span class="p">()</span> <span class="nf">(err, res, body) -&gt;</span>
</span><span class='line'>          <span class="k">return</span> <span class="k">if</span> <span class="nx">err</span> <span class="o">or</span> <span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">statusCode</span> <span class="o">!=</span> <span class="mi">200</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>          <span class="nv">tweet = </span><span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">body</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>          <span class="nx">msg</span><span class="p">.</span><span class="nx">send</span> <span class="s">&quot;@</span><span class="si">#{</span><span class="nx">tweet</span><span class="p">.</span><span class="nx">user</span><span class="p">.</span><span class="nx">screen_name</span><span class="si">}</span><span class="s">: </span><span class="si">#{</span><span class="nx">tweet</span><span class="p">.</span><span class="nx">text</span><span class="si">}</span><span class="s">&quot;</span>
</span><span class='line'>        <span class="nx">msg</span><span class="p">.</span><span class="nx">message</span><span class="p">.</span><span class="nx">finish</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>robot.hear /foo/</code>: <code>foo</code> 가 들리면 반응합니다.</li>
<li><code>robot.respond /foo/</code>: <code>hubot: foo</code> 에 반응합니다.</li>
<li><code>robot.send 'hi'</code>: 로봇이 <code>hi</code> 라고 합니다.</li>
<li><code>robot.reply 'hi'</code>: 로봇이 말건사람한테 <code>&lt;user&gt;: hi</code> 라고 합니다.</li>
</ul>


<p>요거 4개의 기능만 알면 스크립트를 작성하긴 쉽습니다.</p>

<p>저희회사에서는 이걸 이용해서
<a href="https://github.com/miyagawa/hubot-standup">standup-meeting</a> 도 하고
그럽니다.</p>

<p>우선 아이디어가 있으면 남겨주세요.</p>

<p>테스트환경구축이랑 의존성문제는 해결해서 다시 포스팅하겠습니다.</p>

<h3>SEE ALSO</h3>

<ul>
<li><a href="http://silexkr.github.com/blog/2012/02/21/irc-bot/">irc-bot</a></li>
<li><a href="http://theprogrammingbutler.com/blog/archives/2011/10/28/hubot-scripts-explained/">hubot Scripts Explained</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Tidyall]]></title>
    <link href="http://aanoaa.github.io/blog/2012/09/12/tidyall/"/>
    <updated>2012-09-12T01:11:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/09/12/tidyall</id>
    <content type="html"><![CDATA[<p>Perl 에는 Best Practices 가 있습니다.</p>

<p><img src="http://akamaicovers.oreilly.com/images/9780596001735/cat.gif"></p>

<p>Damian Conway (일명 &lsquo;대곤이횽&rsquo;) 의 <a href="http://shop.oreilly.com/product/9780596001735.do">Perl Best Practices</a> 가 그것입니다. (저는 아직 안읽어봤습니다)</p>

<p><a href="http://search.cpan.org/~thaljef/Perl-Critic-1.118/lib/Perl/Critic.pm">Perl::Critic</a>은 정적 소스코드 분석기로써 <code>Perl Best Practices</code> 의 정책을 따릅니다.</p>

<p><a href="http://search.cpan.org/~shancock/Perl-Tidy-20120714/bin/perltidy">perltidy</a> 도 있습니다.
작성한 perlcode 를 깔끔하게 정돈해줍니다.</p>

<p>이와 같은 도구를 사용하면 협업팀으로써 일관된 코딩스타일을 유지시켜 줄
수 있을 거라고 생각했습니다.</p>

<ul>
<li>개인이 스스로 알아서 지킬 수 있겟고,</li>
<li>git <code>pre-commit</code> hook 을 활용할 수 도 있겠습니다.</li>
</ul>


<p>1번은 잘 안되더라고요.
그래서 2번을 시도중입니다.</p>

<p>방법은 이렇습니다.</p>

<pre><code>$ cpanm Code::TidyAll
</code></pre>

<p>설치하고 project repo 에 <code>pre-commit</code> hook 을 작성합니다.</p>

<figure class='code'><figcaption><span>.git/hooks/pre-commit</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='perl'><span class='line'><span class="c1">#!/usr/bin/env perl</span>
</span><span class='line'><span class="k">use</span> <span class="n">strict</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="n">warnings</span><span class="p">;</span>
</span><span class='line'><span class="k">use</span> <span class="nn">Code::TidyAll::Git::</span><span class="n">Precommit</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="nn">Code::TidyAll::Git::</span><span class="n">Precommit</span><span class="o">-&gt;</span><span class="n">check</span><span class="p">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>project root 에 <code>tidyall.ini</code> 를 작성합니다.</p>

<figure class='code'><figcaption><span>tidyall.ini</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='ini'><span class='line'><span class="k">[PerlTidy]</span>
</span><span class='line'><span class="na">select</span> <span class="o">=</span> <span class="s">**/*.{pl,pm,t}</span>
</span><span class='line'><span class="na">ignore</span> <span class="o">=</span> <span class="s">lib/*/Schema/Result/*.pm</span>
</span><span class='line'><span class="na">argv</span> <span class="o">=</span> <span class="s">-noll -it=2</span>
</span><span class='line'>
</span><span class='line'><span class="k">[PerlCritic]</span>
</span><span class='line'><span class="na">select</span> <span class="o">=</span> <span class="s">lib/**/*.pm</span>
</span><span class='line'><span class="na">argv</span> <span class="o">=</span> <span class="s">-severity 5</span>
</span></code></pre></td></tr></table></div></figure>


<p>그리고 코드를 작성하고 commit 합니다.
참 쉽죠?</p>

<p>거지 같이 작성했다면 커밋에 실패하고 적절한 메세지가 나타납니다.</p>

<p>커밋전에 스스로 확인해 보려면 <code>$ tidyall -a</code> 하시면 됩니다.</p>

<h3>SEE ALSO</h3>

<ul>
<li><a href="http://www.openswartz.com/2012/09/05/tidying-and-checking-code-on-commit/">Tidying and checking code on commit</a></li>
<li><a href="http://www.openswartz.com/2012/08/21/one-tidier-to-rule-them-all/">One tidier to rule them all</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Push --force]]></title>
    <link href="http://aanoaa.github.io/blog/2012/09/11/git-push-force/"/>
    <updated>2012-09-11T23:28:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/09/11/git-push-force</id>
    <content type="html"><![CDATA[<p>저는 <code>pull-request workflow</code>가 갑이라고 생각합니다.
비동기 방식으로 업무가 진행되고, merge 하기전에 자연스런 review 도
되고요.</p>

<p>근데 궁금한점이 생겻습니다.
이게 말로 한문장으로 설명하기 참 어려워서 예를 들겠습니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># alias.br=branch</span>
</span><span class='line'><span class="c"># alias.co=checkout</span>
</span><span class='line'><span class="nv">$ </span>git br
</span><span class='line'>* master
</span><span class='line'>  topic1
</span><span class='line'>  topic2
</span></code></pre></td></tr></table></div></figure>


<p>3개의 브랜치가 있고 이렇게 저렇게 작업해서 각각의 이력은 아래와
같습니다. <code>topic1</code> 과 <code>topic2</code> 가 분기한 시점은 같습니다.</p>

<ul>
<li><code>master</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>bfb49285 * <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> init commit
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>topic1</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>c94f01bb * <span class="o">[</span>origin/topic1<span class="o">]</span> <span class="o">[</span>topic1<span class="o">]</span> add b.c
</span><span class='line'>90d550b0 * add a.c
</span><span class='line'>bfb49285 * <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> init commit
</span></code></pre></td></tr></table></div></figure>


<ul>
<li><code>topic2</code></li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>b9f6b81a * <span class="o">[</span>origin/topic2<span class="o">]</span> <span class="o">[</span>topic2<span class="o">]</span> add e.c
</span><span class='line'>95ea73d0 * add d.c
</span><span class='line'>2a44208b * add c.c
</span><span class='line'>bfb49285 * <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> init commit
</span></code></pre></td></tr></table></div></figure>


<p>두개의 <code>topic</code> 모두 <code>pull-request</code> 상태이고(github 을 사용한다고
가정합니다), 매니저가 <code>topic1</code> 을 <em>merge</em> 합니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ed02ed2e *   <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> Merged in aanoaa/test/topic1 <span class="o">(</span>pull request <span class="c">#1)</span>
</span><span class='line'>         <span class="p">|</span><span class="se">\ </span>
</span><span class='line'>c94f01bb <span class="p">|</span> * <span class="o">[</span>origin/topic1<span class="o">]</span> <span class="o">[</span>topic1<span class="o">]</span> add b.c
</span><span class='line'>90d550b0 <span class="p">|</span> * add a.c
</span><span class='line'>         <span class="p">|</span>/
</span><span class='line'>bfb49285 * init commit
</span></code></pre></td></tr></table></div></figure>


<p><code>topic1</code> 이 먼저 <em>merge</em> 되었기에 <code>topic2</code> 에서 <code>master</code> 를 <em>rebase</em>
합니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>963cd74c * <span class="o">[</span>topic2<span class="o">]</span> add e.c
</span><span class='line'>fcaba0cc * add d.c
</span><span class='line'>f28849aa * add c.c
</span><span class='line'>ed02ed2e *   <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> Merged in aanoaa/test/topic1 <span class="o">(</span>pull request <span class="c">#1)</span>
</span><span class='line'>         <span class="p">|</span><span class="se">\ </span>
</span><span class='line'>c94f01bb <span class="p">|</span> * <span class="o">[</span>origin/topic1<span class="o">]</span> <span class="o">[</span>topic1<span class="o">]</span> add b.c
</span><span class='line'>90d550b0 <span class="p">|</span> * add a.c
</span><span class='line'>         <span class="p">|</span>/
</span><span class='line'>bfb49285 * init commit
</span></code></pre></td></tr></table></div></figure>


<p><em>rebase</em> 되었기 때문에 <code>topic2</code> 는 <code>origin/topic2 HEAD</code> 를 잃습니다.
이때 <code>push</code> 하게 되면 <code>reject</code> 됩니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git push origin topic2
</span><span class='line'>To ssh://git@example.com/aanoaa/test.git
</span><span class='line'> ! <span class="o">[</span>rejected<span class="o">]</span>        topic2 -&gt; topic2 <span class="o">(</span>non-fast-forward<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>여기서 다른 사람들은 어떻게 처리하는지가 궁금합니다.
두개의 방법이 있을 수 있습니다.</p>

<ul>
<li><code>$ git pull &amp;&amp; git push</code> <em>non-fast-forward</em> 이기 때문에 쉽게 생각할 수
있는 방법입니다.</li>
<li><code>$ git push --force origin topic2</code> remote 의 이력을 바꿔버립니다.</li>
</ul>


<p>첫번째 방법으로 해결했을때는 <code>topic2</code> 에서 작업한 이력이 두번씩 남게
됩니다.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>9647d196 *   <span class="o">[</span>topic2<span class="o">]</span> Merge branch <span class="s1">&#39;topic2&#39;</span> of ssh://example.com/aanoaa/test into topic2
</span><span class='line'>         <span class="p">|</span><span class="se">\ </span>
</span><span class='line'>b9f6b81a <span class="p">|</span> * <span class="o">[</span>origin/topic2<span class="o">]</span> add e.c
</span><span class='line'>95ea73d0 <span class="p">|</span> * add d.c
</span><span class='line'>2a44208b <span class="p">|</span> * add c.c
</span><span class='line'>963cd74c * <span class="p">|</span> <span class="o">[</span>ref-topic2<span class="o">]</span> add e.c
</span><span class='line'>fcaba0cc * <span class="p">|</span> add d.c
</span><span class='line'>f28849aa * <span class="p">|</span> add c.c
</span><span class='line'>ed02ed2e * <span class="p">|</span>   <span class="o">[</span>origin/master<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span> Merged in aanoaa/test/topic1 <span class="o">(</span>pull request <span class="c">#1)</span>
</span><span class='line'>         <span class="p">|</span><span class="se">\ \ </span>
</span><span class='line'>         <span class="p">|</span> <span class="p">|</span>/
</span><span class='line'>         <span class="p">|</span>/<span class="p">|</span>
</span><span class='line'>c94f01bb <span class="p">|</span> * <span class="o">[</span>origin/topic1<span class="o">]</span> <span class="o">[</span>topic1<span class="o">]</span> add b.c
</span><span class='line'>90d550b0 <span class="p">|</span> * add a.c
</span><span class='line'>         <span class="p">|</span>/
</span><span class='line'>bfb49285 * init commit
</span></code></pre></td></tr></table></div></figure>


<p><em>rebase</em> 의 동작방식을 이해한다면 당연한 결과입니다. 마지막의 <em>merge</em>
 커밋도 <em>pull</em> 을 사용했기 때문에 이해할 수 있습니다.</p>

<p>두번째 방식을 사용한다면 아까 <code>topic2</code> 에서 <code>master</code> 를 <em>rebase</em>
했을때의 이력을 가지게 됩니다만 공동작업에서 remote 의 이력을 변경하게
되는 것이라서 부담이 생깁니다.</p>

<p>두개의 결과는 같습니다만 첫번째는 중복된 이력을 가지게 되고, 두번째는
협업간에 불화가 생길 수 있습니다.</p>

<p>어떻게들 사용하시나요?</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chrome Scrollbar Style]]></title>
    <link href="http://aanoaa.github.io/blog/2012/07/02/chrome-scrollbar-style/"/>
    <updated>2012-07-02T12:50:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/07/02/chrome-scrollbar-style</id>
    <content type="html"><![CDATA[<p><code>$HOME/.config/google-chrome/Default/User StyleSheets/Custom.css</code> 에다가
아래 내용을 추가하면 scroll-bar 가 얄상하니 이쁩니다.</p>

<p>근데 불편해서 안쓸라고.. 나중에 검색하기 힘들까봐 로그 남겨 둡니다.</p>

<figure class='code'><figcaption><span>$HOME/.config/google-chrome/Default/User StyleSheets/Custom.css</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='css'><span class='line'><span class="o">:</span><span class="nd">:-webkit-scrollbar-track-piece</span><span class="p">{</span>
</span><span class='line'>    <span class="k">background-color</span><span class="o">:</span><span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>    <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">0</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nd">:-webkit-scrollbar</span><span class="p">{</span>
</span><span class='line'>    <span class="k">width</span><span class="o">:</span><span class="m">12px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span><span class="m">8px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nd">:-webkit-scrollbar-thumb</span><span class="p">{</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span><span class="m">50px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">background-color</span><span class="o">:</span><span class="m">#999</span><span class="p">;</span>
</span><span class='line'>    <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">4px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">outline</span><span class="o">:</span><span class="m">2px</span> <span class="k">solid</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'>    <span class="k">outline</span><span class="o">-</span><span class="n">offset</span><span class="o">:-</span><span class="m">2px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">border</span><span class="o">:</span> <span class="m">2px</span> <span class="k">solid</span> <span class="m">#fff</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="o">:</span><span class="nd">:-webkit-scrollbar-thumb:hover</span><span class="p">{</span>
</span><span class='line'>    <span class="k">height</span><span class="o">:</span><span class="m">50px</span><span class="p">;</span>
</span><span class='line'>    <span class="k">background-color</span><span class="o">:</span><span class="m">#9f9f9f</span><span class="p">;</span>
</span><span class='line'>    <span class="o">-</span><span class="n">webkit</span><span class="o">-</span><span class="k">border</span><span class="o">-</span><span class="n">radius</span><span class="o">:</span><span class="m">4px</span><span class="p">;</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
