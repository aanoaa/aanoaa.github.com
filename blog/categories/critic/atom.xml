<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Critic | Mustache :{]]></title>
  <link href="http://aanoaa.github.io/blog/categories/critic/atom.xml" rel="self"/>
  <link href="http://aanoaa.github.io/"/>
  <updated>2015-07-15T16:41:55+09:00</updated>
  <id>http://aanoaa.github.io/</id>
  <author>
    <name><![CDATA[Hyungsuk Hong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Tidyall]]></title>
    <link href="http://aanoaa.github.io/blog/2012/09/12/tidyall/"/>
    <updated>2012-09-12T01:11:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/09/12/tidyall</id>
    <content type="html"><![CDATA[<p>Perl 에는 Best Practices 가 있습니다.</p>

<p><img class="<a" src="href="http://akamaicovers.oreilly.com/images/9780596001735/cat.gif">http://akamaicovers.oreilly.com/images/9780596001735/cat.gif</a>"></p>

<p>Damian Conway (일명 &lsquo;대곤이횽&rsquo;) 의 <a href="http://shop.oreilly.com/product/9780596001735.do">Perl Best Practices</a> 가 그것입니다. (저는 아직 안읽어봤습니다)</p>

<p><a href="http://search.cpan.org/~thaljef/Perl-Critic-1.118/lib/Perl/Critic.pm">Perl::Critic</a>은 정적 소스코드 분석기로써 <code>Perl Best Practices</code> 의 정책을 따릅니다.</p>

<p><a href="http://search.cpan.org/~shancock/Perl-Tidy-20120714/bin/perltidy">perltidy</a> 도 있습니다.
작성한 perlcode 를 깔끔하게 정돈해줍니다.</p>

<p>이와 같은 도구를 사용하면 협업팀으로써 일관된 코딩스타일을 유지시켜 줄
수 있을 거라고 생각했습니다.</p>

<ul>
<li>개인이 스스로 알아서 지킬 수 있겟고,</li>
<li>git <code>pre-commit</code> hook 을 활용할 수 도 있겠습니다.</li>
</ul>


<p>1번은 잘 안되더라고요.
그래서 2번을 시도중입니다.</p>

<p>방법은 이렇습니다.</p>

<pre><code>$ cpanm Code::TidyAll
</code></pre>

<p>설치하고 project repo 에 <code>pre-commit</code> hook 을 작성합니다.</p>

<pre><code class="perl .git/hooks/pre-commit">#!/usr/bin/env perl
use strict;
use warnings;
use Code::TidyAll::Git::Precommit;

Code::TidyAll::Git::Precommit-&gt;check();
</code></pre>

<p>project root 에 <code>tidyall.ini</code> 를 작성합니다.</p>

<pre><code class="ini tidyall.ini">[PerlTidy]
select = **/*.{pl,pm,t}
ignore = lib/*/Schema/Result/*.pm
argv = -noll -it=2

[PerlCritic]
select = lib/**/*.pm
argv = -severity 5
</code></pre>

<p>그리고 코드를 작성하고 commit 합니다.
참 쉽죠?</p>

<p>거지 같이 작성했다면 커밋에 실패하고 적절한 메세지가 나타납니다.</p>

<p>커밋전에 스스로 확인해 보려면 <code>$ tidyall -a</code> 하시면 됩니다.</p>

<h3>SEE ALSO</h3>

<ul>
<li><a href="http://www.openswartz.com/2012/09/05/tidying-and-checking-code-on-commit/">Tidying and checking code on commit</a></li>
<li><a href="http://www.openswartz.com/2012/08/21/one-tidier-to-rule-them-all/">One tidier to rule them all</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
