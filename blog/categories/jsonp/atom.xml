<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Jsonp | Mustache :{]]></title>
  <link href="http://aanoaa.github.io/blog/categories/jsonp/atom.xml" rel="self"/>
  <link href="http://aanoaa.github.io/"/>
  <updated>2017-04-27T02:13:42+09:00</updated>
  <id>http://aanoaa.github.io/</id>
  <author>
    <name><![CDATA[Hyungsuk Hong]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[backbon.js Jsonp Collection Sync]]></title>
    <link href="http://aanoaa.github.io/blog/2012/02/27/backbon-dot-js-jsonp-collection-sync/"/>
    <updated>2012-02-27T05:07:00+09:00</updated>
    <id>http://aanoaa.github.io/blog/2012/02/27/backbon-dot-js-jsonp-collection-sync</id>
    <content type="html"><![CDATA[<p>외부 도메인을 사용하고자 할때 <code>jsonp</code> 를 이용해야 하는데,
이때, <code>Backbone.sync</code> 메소드를 override 해서 쓸 수 있습니다.</p>

<p>jquery <code>$.ajax</code> 메소드의 옵션을 보면 <code>dataType</code>을 <code>jsonp</code>로 설정하면
<code>url</code> 꽁지에 자동으로 <code>?callback=jqueryblablablabla_timestamp</code>
query_parameter 를 추가해줍니다.</p>

<pre><code class="coffeescript">class MyCollection extends Backbone.Collection
  model: Log
  sync: (method, model, options) -&gt;
    options.dataType = 'jsonp'
    Backbone.sync(method, model, options)

collection = new MyCollection
collection.url = 'http://otherdomain.com'
collection.fetch # 요래하면 GET/ http://otherdomain.com?callback=jqueryblablablabla_timestamp
  success: (collection, response) -&gt;
    # do something
  error: (collection, response) -&gt;
    # error handling
</code></pre>

<p>서버로부터 응답은 요래 와야..</p>

<pre><code>jqueryblablablabla_timestamp(&lt;stringifiedJSON&gt;)
</code></pre>
]]></content>
  </entry>
  
</feed>
